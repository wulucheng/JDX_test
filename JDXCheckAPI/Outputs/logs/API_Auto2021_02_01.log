2021-02-01 14:29:00,964 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 14:29:00,965 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 14:29:00,965 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 14:29:00,965 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 14:29:00,965 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 14:29:01,266 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 14:29:01,266 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '600551e2e5ec0647d195e0abb26362de', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 14:29:01,267 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 14:29:01,267 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '600551e2e5ec0647d195e0abb26362de', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 14:29:01,267 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 14:29:01,267 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 14:29:01,267 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 14:29:01,268 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 14:29:01,558 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 14:29:01,558 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '42f819c50a280a4a183167aba9966596', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 14:29:01,558 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 14:29:01,559 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：42f819c50a280a4a183167aba9966596
2021-02-01 15:32:37,814 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:37,815 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:37,815 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:37,815 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:37,815 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:38,188 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:38,189 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '994f1e119ca151828f7d4bfda5772b67', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:38,189 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:38,189 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '994f1e119ca151828f7d4bfda5772b67', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:38,190 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:38,190 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:38,190 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:38,190 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:38,409 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:38,410 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '2e97f27562138e436f9f5904523c82ea', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:38,410 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:38,411 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：2e97f27562138e436f9f5904523c82ea
2021-02-01 15:32:38,424 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:38,424 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:38,424 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:38,425 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:38,425 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:38,679 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:38,679 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e2fffc1c68814c1bf1687c18d8792aa3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:38,679 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:38,679 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e2fffc1c68814c1bf1687c18d8792aa3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:38,679 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:38,679 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:38,679 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:38,679 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:38,897 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:38,898 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'd4d12fa0089d265199d6882e5fa4c343', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:38,898 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:38,899 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：d4d12fa0089d265199d6882e5fa4c343
2021-02-01 15:32:38,910 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:38,911 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:38,911 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:38,912 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:38,912 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:39,162 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:39,163 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a5ff203b168b6045e7914e528a0ffe9c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:39,163 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:39,164 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a5ff203b168b6045e7914e528a0ffe9c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:39,164 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:39,165 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:39,165 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:39,166 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:39,379 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:39,379 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '03d2d9fe888ba4b7495c8f2182acdf11', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:39,379 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:39,380 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：03d2d9fe888ba4b7495c8f2182acdf11
2021-02-01 15:32:39,384 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:39,384 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:39,385 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:39,385 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:39,385 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:39,631 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:39,631 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '08b27fc556334c5c071debe218c350b3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:39,632 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:39,632 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '08b27fc556334c5c071debe218c350b3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:39,633 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:39,634 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:39,634 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:39,634 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:39,887 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:39,888 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '5b5a3b5cf9bfc9707860f00f8e257c7e', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:39,888 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:39,888 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：5b5a3b5cf9bfc9707860f00f8e257c7e
2021-02-01 15:32:39,891 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:39,891 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:39,891 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:39,891 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:39,891 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:40,137 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:40,137 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '2cbed82fc717bc8ef5a7dfeae33a564a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:40,137 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:40,138 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '2cbed82fc717bc8ef5a7dfeae33a564a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:40,138 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:40,138 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:40,138 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:40,139 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:40,369 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:40,369 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'fe687fa517430a67ba2c3465669908e1', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:40,370 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:40,370 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：fe687fa517430a67ba2c3465669908e1
2021-02-01 15:32:40,375 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:40,375 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:40,375 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:40,375 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:40,375 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:40,637 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:40,637 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '297ecd1c3b7dc5bdbcb91e2392a46001', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:40,637 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:40,637 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '297ecd1c3b7dc5bdbcb91e2392a46001', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:40,637 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:40,637 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:40,638 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:40,638 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:40,854 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:40,855 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '5e14f59859851919fe8c6338e90846d7', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:40,855 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:40,856 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：5e14f59859851919fe8c6338e90846d7
2021-02-01 15:32:40,867 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:40,868 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:40,868 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:40,869 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:40,869 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:41,126 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:41,126 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f4fea97009089c15e9e22f8ead0a71cf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:41,127 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:41,127 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f4fea97009089c15e9e22f8ead0a71cf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:41,127 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:41,127 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:41,127 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:41,128 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:41,354 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:41,354 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '1f996d21b43e1b29aee24ce96832af22', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:41,355 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:41,355 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：1f996d21b43e1b29aee24ce96832af22
2021-02-01 15:32:41,362 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:41,362 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:41,362 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:41,362 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:41,362 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:41,657 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:41,657 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c3e2c0bc2f2c16a7bc7f21a37086df4d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:41,658 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:41,658 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c3e2c0bc2f2c16a7bc7f21a37086df4d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:41,659 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:41,660 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:41,660 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:41,661 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:41,890 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:41,890 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c83f108e69f1711bb09d4531e5c09697', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:41,891 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:41,892 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c83f108e69f1711bb09d4531e5c09697
2021-02-01 15:32:41,902 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:41,902 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:41,902 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:41,903 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:41,903 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:42,164 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:42,164 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f755a5ff90d6032917fc53632280e350', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:42,165 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:42,165 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f755a5ff90d6032917fc53632280e350', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:42,165 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:42,165 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:42,165 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:42,165 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:42,372 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:42,372 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'd8940b20ce58c71f841046daa3ff6e09', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:42,372 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:42,372 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：d8940b20ce58c71f841046daa3ff6e09
2021-02-01 15:32:42,378 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:42,378 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:42,378 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:42,378 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:42,378 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:42,667 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:42,668 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '38128a129eabb6ca2ea51222a869fcb0', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:42,668 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:42,669 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '38128a129eabb6ca2ea51222a869fcb0', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:42,670 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:42,670 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:42,671 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:42,671 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:42,938 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:42,938 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '4145f06712daf8766842ffb5a30dc740', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:42,938 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:42,938 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：4145f06712daf8766842ffb5a30dc740
2021-02-01 15:32:42,944 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:42,944 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:42,944 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:42,944 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:42,944 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:43,196 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:43,196 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c405659dd76659d436456d2d98287dd6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:43,197 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:43,197 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c405659dd76659d436456d2d98287dd6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:43,198 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:43,198 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:43,199 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:43,199 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:43,431 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:43,431 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '1f6b1247754e7b134da0463112d4c980', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:43,432 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:43,432 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：1f6b1247754e7b134da0463112d4c980
2021-02-01 15:32:43,438 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:43,438 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:43,438 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:43,438 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:43,438 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:43,691 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:43,691 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd517812ca7afb081efc5a724a11da190', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:43,691 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:43,691 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd517812ca7afb081efc5a724a11da190', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:43,691 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:43,691 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:43,691 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:43,691 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:43,879 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:43,880 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '622f117aac38da5e9ff04409f2fa0768', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:43,880 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:43,880 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：622f117aac38da5e9ff04409f2fa0768
2021-02-01 15:32:43,884 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:43,884 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:43,884 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:43,884 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:43,884 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:44,117 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:44,117 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd1fdf6eafc18f864d99b0cc2a26a2b86', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:44,117 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:44,117 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd1fdf6eafc18f864d99b0cc2a26a2b86', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:44,117 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:44,117 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:44,117 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:44,117 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:44,333 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:44,333 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '784138b774640947be3bfc50be13cd90', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:44,334 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:44,334 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：784138b774640947be3bfc50be13cd90
2021-02-01 15:32:44,338 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:44,338 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:44,338 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:44,338 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:44,338 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:44,608 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:44,609 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9390d33387ad86e1468558088000bba3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:44,609 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:44,610 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9390d33387ad86e1468558088000bba3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:44,611 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:44,611 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:44,612 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:44,612 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:44,898 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:44,898 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '475024ca09acdd032a0f3805504863dd', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:44,899 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:44,899 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：475024ca09acdd032a0f3805504863dd
2021-02-01 15:32:44,909 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:44,909 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:44,909 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:44,910 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:44,910 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:45,179 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:45,179 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '22dc8f6ba9255681fbdd63e850766a21', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:45,180 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:45,180 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '22dc8f6ba9255681fbdd63e850766a21', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:45,180 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:45,180 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:45,180 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:45,180 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:45,389 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:45,389 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '7cdcec07e6bbc9df9d3422ca614958f8', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:45,389 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:45,389 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：7cdcec07e6bbc9df9d3422ca614958f8
2021-02-01 15:32:45,395 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:45,395 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:45,395 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:45,395 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:45,395 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:45,658 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:45,659 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8a329e9f72c512b556047a8b101f1121', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:45,659 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:45,660 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8a329e9f72c512b556047a8b101f1121', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:45,660 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:45,661 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:45,661 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:45,662 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:45,929 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:45,930 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '93db38667b2c6a192fefff9e3b958d70', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:45,930 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:45,931 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：93db38667b2c6a192fefff9e3b958d70
2021-02-01 15:32:45,942 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:45,943 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:45,943 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:45,944 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:45,944 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:46,223 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:46,223 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '519133933e3da3fc5ab83c343f3adc6d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:46,224 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:46,224 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '519133933e3da3fc5ab83c343f3adc6d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:46,225 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:46,225 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:46,226 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:46,226 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:46,495 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:46,495 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '13734cb0ba4125a698d941d26d1dda87', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:46,496 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:46,497 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：13734cb0ba4125a698d941d26d1dda87
2021-02-01 15:32:46,508 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:46,509 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:46,509 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:46,510 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:46,511 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:46,799 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:46,800 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f08ae281c36fc328d6d809b2c65c61e2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:46,800 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:46,801 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f08ae281c36fc328d6d809b2c65c61e2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:46,802 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:46,802 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:46,803 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:46,803 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:47,030 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:47,031 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'ec98c4880aee72aed7a26257f8616ea8', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:47,031 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:47,031 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：ec98c4880aee72aed7a26257f8616ea8
2021-02-01 15:32:47,034 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:47,034 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:47,034 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:47,034 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:47,034 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:47,303 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:47,304 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'afc52165ce11c53437dcf0b96d364882', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:47,304 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:47,304 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'afc52165ce11c53437dcf0b96d364882', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:47,304 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:47,305 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:47,305 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:47,305 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:47,524 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:47,525 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '146602b0de08c1837935e281202f671b', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:47,525 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:47,526 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：146602b0de08c1837935e281202f671b
2021-02-01 15:32:47,534 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:47,534 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:47,534 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:47,535 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:47,535 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:47,769 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:47,769 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '7d9e407cee256a75e5f389d7b21b9db1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:47,769 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:47,770 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '7d9e407cee256a75e5f389d7b21b9db1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:47,770 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:47,770 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:47,770 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:47,770 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:48,002 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:48,003 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '5a7820acc31e4c0d78910d3e9742bf51', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:48,003 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:48,004 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：5a7820acc31e4c0d78910d3e9742bf51
2021-02-01 15:32:48,013 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:48,014 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:48,014 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:48,014 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:48,014 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:48,277 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:48,278 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b336a0206a0c9f45c780afa90baca761', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:48,278 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:48,278 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b336a0206a0c9f45c780afa90baca761', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:48,278 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:48,278 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:48,278 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:48,278 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:48,492 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:48,492 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c1ad0e585fa26f2b9e32fc8b8cd417e3', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:48,492 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:48,492 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c1ad0e585fa26f2b9e32fc8b8cd417e3
2021-02-01 15:32:48,496 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:32:48,496 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:48,496 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:48,496 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:32:48,496 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:32:48,751 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:48,751 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '762df5c1814f429879c6c30f754ee4bd', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:48,751 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:48,751 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '762df5c1814f429879c6c30f754ee4bd', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:32:48,752 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:32:48,752 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:32:48,752 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:32:48,752 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:32:48,971 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:32:48,972 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3148cf3952fae7080036722f3cbd93d3', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:32:48,972 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:32:48,972 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3148cf3952fae7080036722f3cbd93d3
2021-02-01 15:34:49,547 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:34:49,547 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:34:49,547 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/app/authentication/captcha/register/login
2021-02-01 15:34:49,548 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:34:49,686 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:34:49,686 JDX INFO handle_request.py-38 line：响应数据为：{'code': 10000010, 'resultMessage': '登录信息为空'}
2021-02-01 15:34:49,687 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:45,753 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:45,753 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:45,753 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:45,753 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:45,753 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:45,863 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:45,863 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165065729, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:45,863 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:45,863 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165065729, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:45,947 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:45,947 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:45,947 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:45,947 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:45,947 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,021 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,021 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165065887, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,021 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,021 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165065887, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,031 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,031 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,031 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,031 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,031 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,101 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,101 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165065967, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,101 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,101 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165065967, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,109 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,109 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,109 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,109 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,110 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,199 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,200 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066064, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,200 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,200 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066064, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,210 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,210 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,210 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,210 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,211 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,297 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,297 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066163, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,297 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,298 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066163, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,311 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,312 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,312 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,312 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,312 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,398 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,398 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066263, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,399 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,399 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066263, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,418 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,418 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,418 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,419 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,419 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,501 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,501 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066369, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,501 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,501 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066369, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,508 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,508 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,508 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,508 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,508 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,603 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,603 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066468, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,603 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,603 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066468, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,611 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,612 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,612 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,612 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,612 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,680 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,680 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066549, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,681 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,681 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066549, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,690 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,690 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,690 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,690 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,690 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,799 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,799 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066665, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,799 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,799 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066665, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,806 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,806 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,806 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,806 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,806 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,888 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,888 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066752, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,888 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,888 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066752, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,895 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,895 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,895 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,895 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,895 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:46,983 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:46,984 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066848, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,984 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:46,984 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066848, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:46,991 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:46,992 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:46,992 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:46,992 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:46,992 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,088 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,088 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165066953, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,088 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,088 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165066953, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,100 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,100 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,100 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,100 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,100 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,200 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,200 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067068, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,201 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,201 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067068, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,212 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,212 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,212 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,213 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,213 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,308 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,308 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067173, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,309 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,309 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067173, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,320 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,320 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,320 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,320 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,320 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,416 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,416 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067281, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,416 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,416 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067281, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,428 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,428 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,428 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,428 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,428 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,499 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,500 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067367, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,500 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,500 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067367, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,511 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,511 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,511 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,511 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,511 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,606 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,606 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067471, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,606 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,606 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067471, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,616 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,616 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,616 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,616 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,616 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,703 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,703 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067568, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,704 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,704 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067568, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,712 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,712 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,712 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,712 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,712 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,823 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,824 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067689, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,824 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,824 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067689, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,839 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,839 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,839 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,839 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,839 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:47,930 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:47,930 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067794, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,931 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:47,931 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067794, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:47,939 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:37:47,939 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:37:47,939 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:37:47,939 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:37:47,939 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:37:48,019 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:37:48,019 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165067884, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:37:48,019 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:37:48,019 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165067884, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,521 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:01,521 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:01,521 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:01,521 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:01,521 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:01,643 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:01,643 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165141502, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,643 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:01,643 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165141502, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,726 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:01,726 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:01,726 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:01,726 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:01,726 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:01,799 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:01,801 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165141664, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,801 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:01,801 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165141664, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,807 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:01,809 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:01,809 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:01,809 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:01,809 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:01,889 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:01,889 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165141752, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,889 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:01,889 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165141752, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,896 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:01,897 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:01,897 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:01,897 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:01,897 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:01,982 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:01,982 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165141844, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,983 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:01,983 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165141844, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:01,990 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:01,990 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:01,990 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:01,990 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:01,990 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,060 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,061 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165141923, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,061 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,061 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165141923, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,068 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,068 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,068 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,068 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,068 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,142 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,143 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142005, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,143 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,143 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142005, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,153 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,153 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,154 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,154 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,154 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,248 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,248 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142106, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,248 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,248 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142106, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,255 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,255 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,256 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,256 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,256 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,333 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,333 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142198, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,333 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,334 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142198, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,341 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,341 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,341 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,342 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,342 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,412 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,412 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142278, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,413 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,413 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142278, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,422 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,422 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,422 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,422 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,422 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,509 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,509 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142372, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,510 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,510 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142372, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,517 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,517 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,517 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,517 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,517 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,612 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,612 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142476, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,612 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,612 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142476, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,620 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,620 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,620 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,621 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,621 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,698 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,699 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142560, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,699 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,699 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142560, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,707 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,707 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,707 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,708 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,708 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,801 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,802 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142665, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,802 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,802 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142665, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,813 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,814 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,814 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,814 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,814 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,886 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,886 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142751, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,887 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,887 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142751, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,900 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,900 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,900 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,900 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,900 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:02,985 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:02,985 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142847, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,985 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:02,985 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142847, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:02,994 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:02,995 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:02,995 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:02,995 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:02,995 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,096 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,096 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165142957, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,097 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,097 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165142957, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,105 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:03,105 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:03,105 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:03,105 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:03,105 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,176 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,176 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165143039, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,176 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,176 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165143039, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,185 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:03,185 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:03,185 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:03,186 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:03,186 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,266 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,266 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165143129, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,266 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,267 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165143129, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,280 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:03,280 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:03,280 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:03,280 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:03,281 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,374 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,374 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165143238, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,374 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,374 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165143238, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,383 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:03,383 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:03,383 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:03,383 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:03,383 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,487 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,488 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165143349, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,488 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,488 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165143349, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,495 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:03,495 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:03,495 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:03,496 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:03,496 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,578 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,578 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165143440, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,578 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,578 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165143440, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,586 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:39:03,586 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:39:03,586 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:39:03,586 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com//jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:39:03,586 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:39:03,665 JDX INFO handle_request.py-37 line：响应状态码为：404
2021-02-01 15:39:03,665 JDX INFO handle_request.py-38 line：响应数据为：{'timestamp': 1612165143528, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:39:03,665 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:39:03,665 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'timestamp': 1612165143528, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/jdx-qa-service/jdx-account-service/app/authentication/captcha/register/login'}
2021-02-01 15:42:12,880 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:12,880 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:12,880 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:12,881 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:12,881 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,002 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,002 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,002 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,002 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,002 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,042 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,042 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,042 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,042 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,042 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,074 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,074 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,074 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,074 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,074 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,107 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,107 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,107 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,107 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,107 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,138 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,138 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,138 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,138 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,138 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,171 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,171 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,171 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,171 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,171 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,204 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,204 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,204 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,204 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,204 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,241 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,242 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,242 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,242 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,242 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,285 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,285 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,285 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,285 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,285 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,327 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,327 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,327 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,327 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,327 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,359 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,359 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,359 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,359 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,359 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,392 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,392 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,392 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,392 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,392 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,423 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,423 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,423 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,423 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,423 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,455 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,455 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,455 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,455 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,455 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,490 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,490 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,490 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,491 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,491 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,534 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,534 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,534 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,534 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,534 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,580 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,580 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,581 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,581 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,581 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,613 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,613 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,613 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,613 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,613 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,646 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,646 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,646 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,646 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,646 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,686 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,686 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,686 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,686 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,686 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:42:13,718 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:42:13,718 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:42:13,718 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:42:13,718 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:42:13,718 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,427 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,428 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,428 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,428 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,428 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,539 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,539 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,539 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,539 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,539 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,579 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,580 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,580 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,580 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,580 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,611 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,611 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,611 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,611 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,611 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,645 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,646 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,646 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,647 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,647 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,693 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,693 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,693 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,693 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,693 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,726 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,726 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,726 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,726 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,726 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,758 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,758 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,758 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,758 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,758 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,792 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,792 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,792 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,792 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,792 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,826 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,826 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,826 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,826 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,826 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,865 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,865 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,865 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,865 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,865 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,899 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,899 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,899 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,899 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,899 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,932 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,932 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,932 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,932 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,932 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,964 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:12,964 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:12,964 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:12,964 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:12,964 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:12,999 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,000 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,000 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,001 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,001 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,044 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,044 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,044 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,044 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,044 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,076 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,076 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,076 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,076 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,076 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,116 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,116 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,116 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,116 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,116 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,151 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,151 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,151 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,152 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,152 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,195 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,195 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,195 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,195 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,195 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,228 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,228 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,228 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,228 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,228 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:47:13,260 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:47:13,260 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:47:13,260 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:47:13,260 JDX INFO handle_request.py-29 line：请求url为：https:/sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:47:13,260 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:19,899 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:19,899 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:19,900 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:19,900 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:19,900 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:20,267 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:20,268 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1b5b341498899b271bd0c2236148083d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:20,268 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:20,268 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1b5b341498899b271bd0c2236148083d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:20,269 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:20,269 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:20,269 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:20,269 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:20,492 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:20,492 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '66a1b2cea0b99971be63e11db91d7004', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:20,492 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:20,493 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：66a1b2cea0b99971be63e11db91d7004
2021-02-01 15:48:20,501 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:20,501 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:20,501 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:20,501 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:20,502 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:20,778 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:20,779 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '720e88f89731ad63c8c6cacbbcb16ebf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:20,779 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:20,779 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '720e88f89731ad63c8c6cacbbcb16ebf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:20,779 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:20,779 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:20,779 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:20,780 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:20,999 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:21,000 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '26f757585a2b138685ed59730e1b4546', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:21,000 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:21,000 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：26f757585a2b138685ed59730e1b4546
2021-02-01 15:48:21,003 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:21,003 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:21,003 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:21,003 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:21,004 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:21,297 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:21,297 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4854eb1193f22739bcf3f49f9564c895', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:21,298 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:21,298 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4854eb1193f22739bcf3f49f9564c895', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:21,299 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:21,300 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:21,301 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:21,301 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:21,562 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:21,563 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '4a08704cc62da706e9e1af8a1993a836', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:21,563 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:21,563 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：4a08704cc62da706e9e1af8a1993a836
2021-02-01 15:48:21,566 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:21,566 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:21,566 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:21,566 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:21,566 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:21,830 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:21,831 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bbc486bef7286a7b2bfc03dc9d9eee99', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:21,831 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:21,832 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bbc486bef7286a7b2bfc03dc9d9eee99', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:21,832 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:21,833 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:21,833 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:21,834 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:22,110 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:22,111 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '9acdd547b6d9a78ddb5ff8bed9a8bd54', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:22,112 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:22,112 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：9acdd547b6d9a78ddb5ff8bed9a8bd54
2021-02-01 15:48:22,123 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:22,124 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:22,124 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:22,124 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:22,124 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:22,410 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:22,411 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '422f77534d2397f986a79a31cf7d68fe', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:22,411 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:22,411 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '422f77534d2397f986a79a31cf7d68fe', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:22,411 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:22,412 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:22,412 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:22,412 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:22,864 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:22,865 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c6bf917d35fb8aabe0ff1b0187dddf6e', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:22,865 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:22,866 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c6bf917d35fb8aabe0ff1b0187dddf6e
2021-02-01 15:48:22,868 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:22,868 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:22,868 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:22,868 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:22,868 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:23,115 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:23,116 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '265e5978acaa936aef67d37700fe9435', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:23,117 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:23,117 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '265e5978acaa936aef67d37700fe9435', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:23,118 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:23,118 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:23,119 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:23,119 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:23,371 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:23,371 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '08451fc50acec02a0e83694e4ffeb4ff', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:23,372 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:23,372 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：08451fc50acec02a0e83694e4ffeb4ff
2021-02-01 15:48:23,383 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:23,384 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:23,384 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:23,384 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:23,385 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:23,671 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:23,672 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b829efa18b68588948f15ddf10d7c9c1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:23,672 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:23,672 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b829efa18b68588948f15ddf10d7c9c1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:23,672 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:23,672 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:23,672 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:23,673 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:23,901 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:23,902 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '22e0f99e75b29c5158c6aae23d8c3438', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:23,902 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:23,903 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：22e0f99e75b29c5158c6aae23d8c3438
2021-02-01 15:48:23,913 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:23,914 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:23,914 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:23,914 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:23,914 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:24,178 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:24,179 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1b081e702ff1b09aa491150a1e910a8c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:24,179 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:24,179 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1b081e702ff1b09aa491150a1e910a8c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:24,180 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:24,180 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:24,180 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:24,180 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:24,388 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:24,389 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'b7b9ff19d5bce7f266388aefe79368a9', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:24,389 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:24,389 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：b7b9ff19d5bce7f266388aefe79368a9
2021-02-01 15:48:24,391 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:24,391 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:24,391 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:24,391 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:24,391 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:24,651 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:24,651 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '545021a11cf892feb70a63b090e09e3c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:24,651 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:24,651 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '545021a11cf892feb70a63b090e09e3c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:24,652 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:24,652 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:24,652 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:24,652 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:24,905 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:24,906 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '79961f8ea587a21aa00a17df0647863f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:24,906 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:24,907 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：79961f8ea587a21aa00a17df0647863f
2021-02-01 15:48:24,916 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:24,917 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:24,917 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:24,917 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:24,918 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:25,199 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:25,199 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a3694e03075d6bcd130ebb22ad6872b1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:25,200 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:25,200 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a3694e03075d6bcd130ebb22ad6872b1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:25,200 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:25,200 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:25,200 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:25,200 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:25,417 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:25,417 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'a2705c7c1ee0526ac4070199ac3a2fac', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:25,418 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:25,418 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：a2705c7c1ee0526ac4070199ac3a2fac
2021-02-01 15:48:25,429 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:25,429 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:25,429 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:25,430 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:25,430 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:25,679 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:25,679 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '623c914a1b2cc7c2c2bce0da0768219a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:25,680 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:25,680 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '623c914a1b2cc7c2c2bce0da0768219a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:25,680 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:25,680 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:25,680 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:25,680 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:25,893 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:25,894 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '58d6a851351d59742a5dec5d8a617774', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:25,894 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:25,895 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：58d6a851351d59742a5dec5d8a617774
2021-02-01 15:48:25,905 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:25,905 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:25,906 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:25,906 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:25,906 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:26,173 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:26,173 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3828823c4cc48270f51360d81dae0ea3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:26,174 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:26,174 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3828823c4cc48270f51360d81dae0ea3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:26,175 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:26,175 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:26,176 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:26,176 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:26,433 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:26,434 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '075b1d0edf0bf2dc00b48314fcbcbb17', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:26,434 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:26,434 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：075b1d0edf0bf2dc00b48314fcbcbb17
2021-02-01 15:48:26,436 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:26,436 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:26,436 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:26,436 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:26,436 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:26,748 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:26,749 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0cf6c6fbd4beaa3d7ea8c6b7abb58aa2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:26,749 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:26,749 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0cf6c6fbd4beaa3d7ea8c6b7abb58aa2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:26,749 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:26,749 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:26,749 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:26,749 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:27,024 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:27,025 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '00170bdcb25dadb36d8f4c410ef4b3b1', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:27,025 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:27,026 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：00170bdcb25dadb36d8f4c410ef4b3b1
2021-02-01 15:48:27,037 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:27,038 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:27,038 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:27,039 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:27,039 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:27,336 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:27,337 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1bd1264b8fdcd3555675e9feebe4171d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:27,337 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:27,337 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1bd1264b8fdcd3555675e9feebe4171d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:27,338 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:27,338 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:27,338 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:27,338 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:27,566 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:27,567 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '1f26b2661e4f19a55861553f5494aebc', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:27,567 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:27,567 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：1f26b2661e4f19a55861553f5494aebc
2021-02-01 15:48:27,569 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:27,569 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:27,569 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:27,569 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:27,570 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:27,868 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:27,869 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '89a16bb317b040c1876b919aac8829a1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:27,869 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:27,869 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '89a16bb317b040c1876b919aac8829a1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:27,869 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:27,869 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:27,869 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:27,869 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:28,102 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:28,102 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '486f737b304da1ed2ea7c729d604364d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:28,103 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:28,103 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：486f737b304da1ed2ea7c729d604364d
2021-02-01 15:48:28,108 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:28,108 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:28,108 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:28,108 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:28,109 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:28,492 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:28,492 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e5f43b2407f4a828821407273357ef81', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:28,492 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:28,492 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e5f43b2407f4a828821407273357ef81', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:28,493 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:28,493 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:28,493 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:28,493 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:28,717 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:28,717 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '68b23e6f4997bc4e2f0b8e5783f6ecc4', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:28,717 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:28,717 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：68b23e6f4997bc4e2f0b8e5783f6ecc4
2021-02-01 15:48:28,720 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:28,720 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:28,720 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:28,720 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:28,720 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:28,995 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:28,995 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f2b021b65ccb07b7c3c86d126c0aac47', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:28,995 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:28,995 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f2b021b65ccb07b7c3c86d126c0aac47', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:28,995 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:28,995 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:28,996 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:28,996 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:29,222 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:29,222 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'ab23c94cef25b2f883add888824eace0', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:29,223 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:29,223 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：ab23c94cef25b2f883add888824eace0
2021-02-01 15:48:29,225 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:29,225 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:29,225 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:29,225 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:29,226 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:29,479 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:29,480 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3e79ab9531d65c4953e4f82b6eccd810', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:29,480 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:29,480 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3e79ab9531d65c4953e4f82b6eccd810', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:29,481 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:29,482 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:29,482 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:29,483 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:29,775 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:29,775 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '8e8c83b8763d29df4686d18085800771', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:29,776 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:29,776 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：8e8c83b8763d29df4686d18085800771
2021-02-01 15:48:29,787 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:29,787 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:29,788 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:29,788 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:29,788 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:30,062 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:30,062 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '81b230d1b5ea1f8c7df0026fb340c487', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:30,062 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:30,062 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '81b230d1b5ea1f8c7df0026fb340c487', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:30,062 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:30,062 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:30,062 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:30,062 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:30,855 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:30,855 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'b8db571c29a8babc8c8302438f124691', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:30,856 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:30,856 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：b8db571c29a8babc8c8302438f124691
2021-02-01 15:48:30,858 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:30,858 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:30,859 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:30,859 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:30,859 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:31,162 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:31,162 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0fc6509748c249fa4c0df1218faffdfd', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:31,162 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:31,162 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0fc6509748c249fa4c0df1218faffdfd', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:31,162 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:31,162 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:31,162 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:31,162 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:31,384 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:31,385 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '861203e544eb58141f13790a1dfc638e', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:31,385 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:31,385 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：861203e544eb58141f13790a1dfc638e
2021-02-01 15:48:31,387 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:31,387 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:31,387 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:31,387 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:31,388 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:31,647 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:31,648 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bb3bc430b65a1a1e3eca7cdc329ebe29', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:31,648 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:31,648 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bb3bc430b65a1a1e3eca7cdc329ebe29', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:31,648 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:31,648 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:31,648 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:31,648 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:31,859 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:31,860 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '0b2030228b92b865e10e3c00fb4634da', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:31,860 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:31,861 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：0b2030228b92b865e10e3c00fb4634da
2021-02-01 15:48:31,870 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 15:48:31,871 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:31,871 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:31,871 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 15:48:31,872 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 15:48:32,132 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:32,133 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '40f13b6022448cf75246fecdf3a78609', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:32,133 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:32,133 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '40f13b6022448cf75246fecdf3a78609', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 15:48:32,133 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:48:32,133 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 15:48:32,133 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 15:48:32,133 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 15:48:32,372 JDX INFO handle_request.py-37 line：响应状态码为：200
2021-02-01 15:48:32,372 JDX INFO handle_request.py-38 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '92a67d8b95ab051710762681cda29bae', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 15:48:32,372 JDX INFO handle_request.py-39 line：***************** HTTP请求结束 *****************
2021-02-01 15:48:32,372 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：92a67d8b95ab051710762681cda29bae
2021-02-01 15:51:29,073 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:51:29,074 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:51:29,074 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/app/inspection/report/create/report/default
2021-02-01 15:51:29,074 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:51:29,162 JDX INFO chang.py-44 line：响应状态码为：404
2021-02-01 15:51:29,162 JDX INFO chang.py-45 line：响应数据为：{'timestamp': 1612165889065, 'status': 404, 'error': 'Not Found', 'message': 'No message available', 'path': '/app/inspection/report/create/report/default'}
2021-02-01 15:51:29,163 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:51:48,155 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:51:48,155 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:51:48,156 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:51:48,156 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:51:48,234 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:51:48,234 JDX INFO chang.py-45 line：响应数据为：{'code': 10000010, 'resultMessage': '登录信息为空'}
2021-02-01 15:51:48,235 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:52:43,489 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:52:43,489 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:52:43,489 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:52:43,489 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:52:43,603 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:52:43,603 JDX INFO chang.py-45 line：响应数据为：{'code': 10000010, 'resultMessage': '登录信息为空'}
2021-02-01 15:52:43,603 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:53:51,663 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:53:51,663 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:53:51,664 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:53:51,664 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:53:51,777 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:53:51,778 JDX INFO chang.py-45 line：响应数据为：{'code': 10000010, 'resultMessage': '登录信息为空'}
2021-02-01 15:53:51,778 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:54:29,308 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:54:29,308 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:54:29,309 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:54:29,309 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:54:29,411 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:54:29,412 JDX INFO chang.py-45 line：响应数据为：{'code': 10000010, 'resultMessage': '登录信息为空'}
2021-02-01 15:54:29,412 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:55:35,157 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:55:35,157 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:55:35,157 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:55:35,157 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:56:01,801 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:56:01,801 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:56:01,801 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:56:01,801 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:56:03,748 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:56:03,751 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356149292737347584', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356149293576200192', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 15:56:03,752 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:57:52,581 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:57:52,581 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:57:52,582 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:57:52,582 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:57:54,370 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:57:54,372 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356149756644085760', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356149757373947904', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 15:57:54,373 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 15:58:06,190 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 15:58:06,190 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 15:58:06,190 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 15:58:06,190 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 15:58:08,419 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 15:58:08,420 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356149814340915200', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356149815259541504', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 15:58:08,423 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 16:58:17,111 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 16:58:17,112 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 16:58:17,112 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 16:58:17,112 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 16:58:19,004 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 16:58:19,004 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356164959037386752', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356164959838515200', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 16:58:19,009 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 16:58:34,573 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 16:58:34,573 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 16:58:34,573 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 16:58:34,573 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 16:58:36,102 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 16:58:36,103 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356165032068550656', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356165032840372224', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 16:58:36,105 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 16:59:15,318 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 16:59:15,318 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 16:59:15,318 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 16:59:15,318 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 16:59:17,035 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 16:59:17,035 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356165203619794944', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356165204257382400', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 16:59:17,038 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 17:00:06,454 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:00:06,454 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 17:00:06,454 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:00:06,454 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 17:00:08,466 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 17:00:08,467 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356165418359754752', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356165419144159232', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:00:08,467 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 17:00:16,406 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:00:16,406 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 17:00:16,406 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:00:16,406 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 17:00:18,289 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 17:00:18,290 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356165459287773184', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356165460076376064', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:00:18,290 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 17:00:43,152 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:00:43,152 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 17:00:43,152 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:00:43,152 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 17:00:44,773 JDX INFO chang.py-44 line：响应状态码为：200
2021-02-01 17:00:44,774 JDX INFO chang.py-45 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356165571263184896', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356165571867160576', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:00:44,775 JDX INFO chang.py-46 line：***************** HTTP请求结束 *****************
2021-02-01 17:01:23,827 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:01:23,827 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 17:01:23,827 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:01:23,827 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 17:01:23,827 JDX INFO chang.py-42 line：get请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:01:25,835 JDX INFO chang.py-46 line：响应状态码为：200
2021-02-01 17:01:25,836 JDX INFO chang.py-47 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356165742231326720', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356165743011536896', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:01:25,839 JDX INFO chang.py-48 line：***************** HTTP请求结束 *****************
2021-02-01 17:03:25,443 JDX INFO chang.py-32 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:03:25,443 JDX INFO chang.py-33 line：请求方法为：get
2021-02-01 17:03:25,443 JDX INFO chang.py-36 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:03:25,443 JDX INFO chang.py-37 line：请求数据为：{'productId': 36047}
2021-02-01 17:03:25,443 JDX INFO chang.py-42 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:03:27,111 JDX INFO chang.py-46 line：响应状态码为：200
2021-02-01 17:03:27,111 JDX INFO chang.py-47 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356166252111892480', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166252883718144', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:03:27,115 JDX INFO chang.py-48 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:24,052 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:24,052 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:24,052 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:24,052 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:24,052 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:24,374 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:24,376 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9879841190f126b25d1f5ecfe8fa2641', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:24,376 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:24,377 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9879841190f126b25d1f5ecfe8fa2641', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:24,377 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:24,377 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:24,377 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:24,378 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:24,610 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:24,611 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'f6d089b405feb1e8397fc281d0f3a286', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:24,611 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:24,612 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：f6d089b405feb1e8397fc281d0f3a286
2021-02-01 17:04:24,710 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:24,711 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:24,711 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:24,711 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:24,711 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:24,969 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:24,969 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '437c31cb6390a1da13a1203298f0d200', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:24,969 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:24,969 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '437c31cb6390a1da13a1203298f0d200', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:24,970 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:24,970 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:24,970 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:24,970 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:25,200 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:25,200 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '6706522c59362724df9c9ad98a6ef073', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:25,200 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:25,201 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：6706522c59362724df9c9ad98a6ef073
2021-02-01 17:04:25,205 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:25,205 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:25,205 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:25,206 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:25,206 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:25,489 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:25,489 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b611a480a68ce97714e3d39983c0a430', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:25,489 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:25,489 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b611a480a68ce97714e3d39983c0a430', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:25,490 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:25,490 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:25,490 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:25,490 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:25,722 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:25,723 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3a2f4ebf8386a4c949930e93c0b9c15a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:25,723 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:25,723 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3a2f4ebf8386a4c949930e93c0b9c15a
2021-02-01 17:04:25,727 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:25,727 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:25,727 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:25,727 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:25,728 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:25,989 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:25,989 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '65726a1df1dace700cceb0c3cfad32ad', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:25,989 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:25,989 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '65726a1df1dace700cceb0c3cfad32ad', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:25,990 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:25,990 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:25,990 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:25,990 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:26,246 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:26,246 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '04a1045072f26d32e7a1406b39ca125d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:26,247 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:26,247 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：04a1045072f26d32e7a1406b39ca125d
2021-02-01 17:04:26,253 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:26,253 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:26,253 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:26,253 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:26,253 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:26,494 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:26,494 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '2791401c2bab95c722e446546cc0cd92', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:26,495 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:26,495 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '2791401c2bab95c722e446546cc0cd92', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:26,496 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:26,496 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:26,497 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:26,497 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:26,724 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:26,725 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'bfe45f9d0af7e505f7c06468b7235309', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:26,725 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:26,725 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：bfe45f9d0af7e505f7c06468b7235309
2021-02-01 17:04:26,732 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:26,732 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:26,732 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:26,732 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:26,732 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:26,978 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:26,978 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c99e2e08becf866fef07523670616392', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:26,978 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:26,978 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c99e2e08becf866fef07523670616392', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:26,979 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:26,979 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:26,979 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:26,979 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:27,199 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:27,199 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '450eaf3d8d7bdacc3a59745280c816d9', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:27,199 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:27,199 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：450eaf3d8d7bdacc3a59745280c816d9
2021-02-01 17:04:27,205 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:27,205 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:27,205 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:27,205 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:27,206 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:27,462 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:27,463 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f86cf382412d4aa92ecd01ddab0083ca', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:27,463 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:27,463 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f86cf382412d4aa92ecd01ddab0083ca', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:27,463 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:27,463 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:27,463 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:27,463 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:27,674 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:27,675 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '8c9c28c2865986b649fed89797cf9621', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:27,675 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:27,676 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：8c9c28c2865986b649fed89797cf9621
2021-02-01 17:04:27,685 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:27,685 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:27,685 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:27,685 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:27,685 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:27,930 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:27,930 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b78cac3d5d2236c05e98808238138bd2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:27,930 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:27,931 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b78cac3d5d2236c05e98808238138bd2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:27,931 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:27,931 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:27,931 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:27,932 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:28,168 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:28,168 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '6e5f99f9ea694b36d8d30ba938d805e7', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:28,168 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:28,168 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：6e5f99f9ea694b36d8d30ba938d805e7
2021-02-01 17:04:28,173 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:28,173 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:28,173 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:28,173 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:28,173 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:28,429 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:28,430 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'aa74f78bcf0b77d3b6ae4b1442e9768c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:28,430 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:28,432 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'aa74f78bcf0b77d3b6ae4b1442e9768c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:28,432 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:28,432 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:28,433 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:28,433 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:28,652 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:28,652 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '38ec9886ee6e6c0a6781a79dd53e288b', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:28,652 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:28,652 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：38ec9886ee6e6c0a6781a79dd53e288b
2021-02-01 17:04:28,656 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:28,657 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:28,657 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:28,657 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:28,657 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:28,927 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:28,927 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '5eb3995e3b43bbeac522a6bde0aa94a0', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:28,927 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:28,927 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '5eb3995e3b43bbeac522a6bde0aa94a0', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:28,927 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:28,928 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:28,928 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:28,928 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:29,147 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:29,147 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '4e1f8b11766966ca885ef4b1dd927f8c', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:29,148 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:29,148 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：4e1f8b11766966ca885ef4b1dd927f8c
2021-02-01 17:04:29,158 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:29,158 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:29,158 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:29,158 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:29,158 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:29,494 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:29,494 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8eb27b51397876e3abf1e8bb7ddd762a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:29,494 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:29,494 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8eb27b51397876e3abf1e8bb7ddd762a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:29,494 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:29,494 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:29,494 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:29,494 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:29,734 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:29,735 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '913bc5e9545d18583ce83ea448ca991c', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:29,735 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:29,735 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：913bc5e9545d18583ce83ea448ca991c
2021-02-01 17:04:29,743 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:29,743 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:29,743 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:29,744 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:29,744 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:30,019 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:30,020 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6f0ca95796dfe6cde1066e57440409b9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:30,020 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:30,020 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6f0ca95796dfe6cde1066e57440409b9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:30,020 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:30,021 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:30,021 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:30,021 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:30,286 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:30,286 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c1dd61a1a2fb7c176c21584ea87ac979', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:30,286 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:30,286 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c1dd61a1a2fb7c176c21584ea87ac979
2021-02-01 17:04:30,291 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:30,291 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:30,291 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:30,291 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:30,291 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:30,584 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:30,585 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '21a6211ce9cc2bd9bcf83d7a6af6304f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:30,585 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:30,586 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '21a6211ce9cc2bd9bcf83d7a6af6304f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:30,587 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:30,587 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:30,588 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:30,588 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:30,861 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:30,862 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '05630abbe7e18d6035e9ca4c6c96038f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:30,862 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:30,863 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：05630abbe7e18d6035e9ca4c6c96038f
2021-02-01 17:04:30,880 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:30,881 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:30,881 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:30,881 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:30,881 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:31,197 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:31,197 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c0e38d7f37ed247855abf5ddd49aaa22', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:31,197 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:31,198 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c0e38d7f37ed247855abf5ddd49aaa22', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:31,198 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:31,198 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:31,198 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:31,198 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:31,429 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:31,430 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '6fc85b1d83d3756652245935ff3d8e44', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:31,430 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:31,430 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：6fc85b1d83d3756652245935ff3d8e44
2021-02-01 17:04:31,436 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:31,436 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:31,436 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:31,436 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:31,436 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:31,713 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:31,714 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4476736cce3ea2249afe115dc8ff0dab', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:31,714 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:31,714 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4476736cce3ea2249afe115dc8ff0dab', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:31,715 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:31,716 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:31,716 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:31,717 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:31,955 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:31,955 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '795ff8d66a7e6cd1fb7b9c73ec887290', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:31,956 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:31,956 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：795ff8d66a7e6cd1fb7b9c73ec887290
2021-02-01 17:04:31,962 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:31,962 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:31,962 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:31,962 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:31,962 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:32,228 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:32,228 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6c46cc86c954feda7c987dc71f8be068', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:32,228 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:32,228 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6c46cc86c954feda7c987dc71f8be068', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:32,228 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:32,228 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:32,228 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:32,229 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:32,456 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:32,456 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '2c3fbca62aed84c1f74888b5575ad1d6', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:32,456 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:32,456 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：2c3fbca62aed84c1f74888b5575ad1d6
2021-02-01 17:04:32,462 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:32,462 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:32,462 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:32,462 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:32,462 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:32,767 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:32,767 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '78e3748b6b2f541444d2242535f3f657', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:32,767 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:32,767 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '78e3748b6b2f541444d2242535f3f657', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:32,768 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:32,768 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:32,768 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:32,768 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:33,020 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:33,020 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'a95ce8d024464bf906259c0aab6a2e92', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:33,020 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:33,020 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：a95ce8d024464bf906259c0aab6a2e92
2021-02-01 17:04:33,025 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:33,025 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:33,025 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:33,025 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:33,025 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:33,290 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:33,290 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a2374b4316a7e68f5fbcebf15f071581', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:33,290 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:33,291 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a2374b4316a7e68f5fbcebf15f071581', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:33,291 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:33,292 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:33,292 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:33,292 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:33,561 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:33,562 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3006d92591f1bc6b6c73b8d46a259eea', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:33,562 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:33,562 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3006d92591f1bc6b6c73b8d46a259eea
2021-02-01 17:04:33,566 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:33,566 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:33,566 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:33,566 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:33,566 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:33,825 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:33,825 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e639eb853cde54fe1025650d56311d4b', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:33,826 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:33,826 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e639eb853cde54fe1025650d56311d4b', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:33,826 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:33,826 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:33,826 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:33,826 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:34,052 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:34,052 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '248c0595465485b44d93cc4b43f6bc78', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:34,052 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:34,052 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：248c0595465485b44d93cc4b43f6bc78
2021-02-01 17:04:34,058 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:34,058 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:34,058 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:34,058 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:34,058 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:34,349 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:34,349 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '609f7509721773b989f875907120ec62', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:34,349 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:34,349 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '609f7509721773b989f875907120ec62', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:34,349 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:34,349 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:34,349 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:34,349 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:34,571 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:34,572 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '00fd0c6b16f72cf59491b1acf97b899d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:34,572 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:34,572 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：00fd0c6b16f72cf59491b1acf97b899d
2021-02-01 17:04:34,577 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:34,577 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:34,577 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:34,577 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:34,577 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:34,881 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:34,881 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '5b0b543c8ed9982dba1ab83f80a88751', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:34,881 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:34,881 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '5b0b543c8ed9982dba1ab83f80a88751', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:34,882 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:34,882 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:34,882 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:34,882 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:35,105 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:35,105 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '36e3e7ff2993a595e7ff50cba3e584ec', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:35,106 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:35,106 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：36e3e7ff2993a595e7ff50cba3e584ec
2021-02-01 17:04:35,117 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:35,117 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:35,117 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:35,117 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:35,117 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:35,367 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:35,367 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'aa9ffa36496e89e9f9af19507584616a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:35,368 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:35,368 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'aa9ffa36496e89e9f9af19507584616a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:35,369 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:35,370 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:35,370 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:35,370 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:35,622 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:35,623 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '7f1c90d2a93a350d9e304042ec7182d0', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:35,623 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:35,624 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：7f1c90d2a93a350d9e304042ec7182d0
2021-02-01 17:04:41,089 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:41,089 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:41,089 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:41,089 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:41,089 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:41,367 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:41,368 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'ad458b4634ff56bd98d690e4e8c1a92d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:41,369 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:41,369 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'ad458b4634ff56bd98d690e4e8c1a92d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:41,373 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:41,373 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:41,374 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:41,374 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:41,598 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:41,598 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '27146cb3799bc48995bdbb86cdcdbf07', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:41,598 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:41,598 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：27146cb3799bc48995bdbb86cdcdbf07
2021-02-01 17:04:41,600 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:41,600 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:41,600 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:41,600 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36047}
2021-02-01 17:04:41,600 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:43,230 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:43,233 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356166571566940160', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166572317712384', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:04:43,234 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:43,254 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:43,255 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:43,255 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:43,255 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:43,255 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:43,514 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:43,514 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8ed5dd45ed347bfb00b0c1ef463ae99d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:43,514 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:43,514 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8ed5dd45ed347bfb00b0c1ef463ae99d', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:43,515 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:43,515 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:43,515 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:43,515 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:43,752 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:43,753 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3ee2c4028f0cb0daf178edfc329c6c94', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:43,753 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:43,754 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3ee2c4028f0cb0daf178edfc329c6c94
2021-02-01 17:04:43,760 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:43,760 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:43,761 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:43,761 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36300}
2021-02-01 17:04:43,762 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:45,633 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:45,635 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 356, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '纯白色', 'normal': False, 'ppnId': 456, 'ppvId': 12784, 'type': 0}, {'checked': False, 'name': '浅黑色', 'normal': False, 'ppnId': 456, 'ppvId': 12782, 'type': 0}, {'checked': False, 'name': '松绿色', 'normal': False, 'ppnId': 456, 'ppvId': 12783, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '16G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 11427, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '锤子 坚果 R2', 'price': 4543, 'productId': 36300, 'remoteReportNo': 'R1356166581390000128', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166582312742912', 'suggestRecyclePrice': 4143}, 'resultMessage': ''}
2021-02-01 17:04:45,636 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:45,653 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:45,654 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:45,654 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:45,654 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:45,654 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:45,913 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:45,913 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '57b05935e2643679a935e986b09afcd6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:45,914 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:45,914 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '57b05935e2643679a935e986b09afcd6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:45,914 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:45,914 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:45,914 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:45,914 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:46,150 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:46,150 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '12656264c5d49b98108d4f7241d8adb4', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:46,151 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:46,151 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：12656264c5d49b98108d4f7241d8adb4
2021-02-01 17:04:46,152 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:46,152 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:46,152 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:46,152 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 17:04:46,152 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:47,657 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:47,659 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '双网通', 'normal': False, 'ppnId': 492, 'ppvId': 3085, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi Note 8 Pro', 'price': 619, 'productId': 32068, 'remoteReportNo': 'R1356166590567075840', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166591355658240', 'suggestRecyclePrice': 495}, 'resultMessage': ''}
2021-02-01 17:04:47,659 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:47,665 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:47,665 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:47,665 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:47,665 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:47,665 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:47,931 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:47,931 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '58aa09d27e5528e15f64c520a71dcd5a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:47,931 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:47,931 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '58aa09d27e5528e15f64c520a71dcd5a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:47,932 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:47,932 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:47,932 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:47,932 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:48,148 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:48,148 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '6161564a8ca9e90a6327519cfc8d26d2', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:48,148 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:48,149 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：6161564a8ca9e90a6327519cfc8d26d2
2021-02-01 17:04:48,150 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:48,150 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:48,150 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:48,150 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34701}
2021-02-01 17:04:48,150 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:49,877 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:49,880 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2275', 'normal': False, 'ppnId': 1102, 'ppvId': 11452, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}, {'checked': False, 'name': 'A2298', 'normal': False, 'ppnId': 1102, 'ppvId': 11447, 'type': 0}, {'checked': False, 'name': 'A2296', 'normal': False, 'ppnId': 1102, 'ppvId': 11448, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone SE 2', 'price': 2429, 'productId': 34701, 'remoteReportNo': 'R1356166599056408576', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166599844933632', 'suggestRecyclePrice': 2138}, 'resultMessage': ''}
2021-02-01 17:04:49,881 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:49,885 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:49,885 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:49,885 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:49,885 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:49,885 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:50,301 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:50,302 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '45b1c6ef5d3f214f75b0845daf97fb38', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:50,302 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:50,302 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '45b1c6ef5d3f214f75b0845daf97fb38', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:50,302 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:50,303 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:50,303 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:50,303 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:50,515 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:50,516 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c4d936a87f5100c463e73d7d8c27240d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:50,516 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:50,517 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c4d936a87f5100c463e73d7d8c27240d
2021-02-01 17:04:50,522 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:50,523 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:50,523 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:50,524 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 17:04:50,524 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:51,862 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:51,863 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '双网通', 'normal': False, 'ppnId': 492, 'ppvId': 3085, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi Note 8 Pro', 'price': 619, 'productId': 32068, 'remoteReportNo': 'R1356166608610971648', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166609307283456', 'suggestRecyclePrice': 495}, 'resultMessage': ''}
2021-02-01 17:04:51,863 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:51,867 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:51,867 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:51,867 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:51,867 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:51,867 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:52,128 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:52,128 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0db2f06f677774c006cd5d11708ad41a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:52,129 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:52,129 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0db2f06f677774c006cd5d11708ad41a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:52,129 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:52,129 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:52,129 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:52,129 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:52,349 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:52,349 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'd0426d98fc0282acdee7019b8438194e', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:52,349 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:52,349 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：d0426d98fc0282acdee7019b8438194e
2021-02-01 17:04:52,351 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:52,351 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:52,352 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:52,352 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36045}
2021-02-01 17:04:52,352 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:54,004 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:54,004 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1909, 'ppvItems': [{'checked': True, 'name': '其他型号', 'normal': False, 'ppnId': 1909, 'ppvId': 12649, 'type': 0}, {'checked': False, 'name': 'A2404', 'normal': False, 'ppnId': 1909, 'ppvId': 12648, 'type': 0}, {'checked': False, 'name': 'A2403', 'normal': False, 'ppnId': 1909, 'ppvId': 12978, 'type': 0}, {'checked': False, 'name': 'A2172', 'normal': False, 'ppnId': 1909, 'ppvId': 13014, 'type': 0}, {'checked': False, 'name': 'A2402', 'normal': False, 'ppnId': 1909, 'ppvId': 13023, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12', 'price': 5436, 'productId': 36045, 'remoteReportNo': 'R1356166616638930944', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166617423261696', 'suggestRecyclePrice': 5001}, 'resultMessage': ''}
2021-02-01 17:04:54,005 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:54,012 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:54,013 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:54,013 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:54,013 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:54,013 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:54,274 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:54,274 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f5c756d83298f9d42d68c790ccc24244', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:54,274 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:54,274 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f5c756d83298f9d42d68c790ccc24244', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:54,274 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:54,274 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:54,274 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:54,274 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:54,488 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:54,488 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '10e5e9e9d10ebfc0fcabadf5a4a68dbc', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:54,488 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:54,488 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：10e5e9e9d10ebfc0fcabadf5a4a68dbc
2021-02-01 17:04:54,490 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:54,490 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:54,490 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:54,490 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27627}
2021-02-01 17:04:54,490 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:56,097 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:56,098 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '运营商版全网通', 'normal': False, 'ppnId': 492, 'ppvId': 12114, 'type': 0}, {'checked': False, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4484, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '小米手机8 （青春版）', 'price': 581, 'productId': 27627, 'remoteReportNo': 'R1356166625539182592', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166626285826048', 'suggestRecyclePrice': 465}, 'resultMessage': ''}
2021-02-01 17:04:56,098 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:56,102 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:56,102 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:56,102 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:56,102 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:56,102 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:56,366 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:56,367 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '005b7a7e411ca2612d7a776a68306338', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:56,367 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:56,367 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '005b7a7e411ca2612d7a776a68306338', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:56,367 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:56,367 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:56,367 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:56,367 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:56,604 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:56,604 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '68a04f81469b94a8417653b5dee1cb28', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:56,604 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:56,605 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：68a04f81469b94a8417653b5dee1cb28
2021-02-01 17:04:56,606 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:56,606 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:56,606 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:56,606 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34448}
2021-02-01 17:04:56,606 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:58,247 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:58,248 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 485, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '粉色', 'normal': False, 'ppnId': 456, 'ppvId': 2815, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '黑鲨游戏手机 3（5G版）', 'price': 2343, 'productId': 34448, 'remoteReportNo': 'R1356166634363990016', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166635177750528', 'suggestRecyclePrice': 2062}, 'resultMessage': ''}
2021-02-01 17:04:58,248 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:58,255 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:04:58,255 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:58,255 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:58,255 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:04:58,255 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:04:58,509 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:58,510 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e5007983ce1787eb38f981340d4e8a93', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:58,510 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:58,510 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e5007983ce1787eb38f981340d4e8a93', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:04:58,511 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:58,512 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:04:58,512 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:04:58,513 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:04:58,739 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:04:58,739 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '0b3bbe4ecfc44dde54759ed13fc401f6', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:04:58,740 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:04:58,740 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：0b3bbe4ecfc44dde54759ed13fc401f6
2021-02-01 17:04:58,745 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:04:58,745 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:04:58,745 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:04:58,746 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 17:04:58,746 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:00,454 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:00,456 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '星空色', 'normal': False, 'ppnId': 456, 'ppvId': 7419, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 Z18', 'price': 1227, 'productId': 27664, 'remoteReportNo': 'R1356166643780210688', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166644585570304', 'suggestRecyclePrice': 1043}, 'resultMessage': ''}
2021-02-01 17:05:00,456 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:00,460 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:00,460 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:00,460 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:00,460 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:00,460 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:00,712 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:00,712 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'fc8c525738d67bf9f5924c2f0514712f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:00,712 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:00,712 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'fc8c525738d67bf9f5924c2f0514712f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:00,712 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:00,713 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:00,713 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:00,713 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:00,934 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:00,934 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'b49ad18de152edfe5a33f91bf0bd5d6f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:00,934 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:00,935 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：b49ad18de152edfe5a33f91bf0bd5d6f
2021-02-01 17:05:00,936 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:00,936 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:00,936 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:00,936 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 26983}
2021-02-01 17:05:00,936 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:02,487 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:02,488 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 18, 'categoryId': 1, 'deviceInfo': [{'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '联想 Z5', 'price': 624, 'productId': 26983, 'remoteReportNo': 'R1356166652667981824', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166653456527360', 'suggestRecyclePrice': 499}, 'resultMessage': ''}
2021-02-01 17:05:02,488 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:02,492 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:02,492 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:02,492 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:02,492 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:02,493 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:02,764 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:02,764 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3e0cafc79b14f662b81fff96df3bbed1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:02,764 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:02,764 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3e0cafc79b14f662b81fff96df3bbed1', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:02,765 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:02,765 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:02,765 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:02,765 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:02,991 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:02,991 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '412a4eb63f963479201c5b5eab1a4792', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:02,991 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:02,991 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：412a4eb63f963479201c5b5eab1a4792
2021-02-01 17:05:02,993 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:02,993 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:02,993 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:02,993 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32835}
2021-02-01 17:05:02,993 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:04,731 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:04,734 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '2G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 5125, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '3G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 3964, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi 8A', 'price': 390, 'productId': 32835, 'remoteReportNo': 'R1356166661236895744', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166662088400896', 'suggestRecyclePrice': 310}, 'resultMessage': ''}
2021-02-01 17:05:04,734 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:04,739 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:04,739 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:04,739 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:04,739 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:04,739 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:04,987 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:04,988 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd981ef8060e33e9d576213a51490b5ec', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:04,988 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:04,988 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd981ef8060e33e9d576213a51490b5ec', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:04,989 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:04,989 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:04,990 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:04,990 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:05,226 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:05,226 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'ecdfbb9c12930dea49c554c242923fe2', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:05,226 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:05,227 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：ecdfbb9c12930dea49c554c242923fe2
2021-02-01 17:05:05,228 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:05,228 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:05,228 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:05,228 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35585}
2021-02-01 17:05:05,228 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:06,748 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:06,750 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 6712, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi K30 （至尊纪念版）', 'price': 2287, 'productId': 35585, 'remoteReportNo': 'R1356166670602768384', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166671433310208', 'suggestRecyclePrice': 2013}, 'resultMessage': ''}
2021-02-01 17:05:06,750 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:06,757 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:06,757 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:06,757 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:06,757 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:06,757 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:07,007 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:07,007 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8f64176caa2126633f5e7342f031d621', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:07,007 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:07,007 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8f64176caa2126633f5e7342f031d621', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:07,008 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:07,008 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:07,008 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:07,008 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:07,244 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:07,245 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'b968dbb1c5a834d49b800b3750471071', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:07,245 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:07,245 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：b968dbb1c5a834d49b800b3750471071
2021-02-01 17:05:07,246 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:07,246 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:07,246 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:07,246 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 17:05:07,246 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:08,653 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:08,655 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '星空色', 'normal': False, 'ppnId': 456, 'ppvId': 7419, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 Z18', 'price': 1227, 'productId': 27664, 'remoteReportNo': 'R1356166678752378880', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166679356350464', 'suggestRecyclePrice': 1043}, 'resultMessage': ''}
2021-02-01 17:05:08,655 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:08,659 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:08,659 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:08,659 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:08,659 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:08,659 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:08,917 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:08,918 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bd7650c1971e4be2804e9156a7e56d5f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:08,918 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:08,918 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bd7650c1971e4be2804e9156a7e56d5f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:08,918 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:08,918 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:08,918 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:08,918 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:09,131 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:09,131 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '9ef91e8214030de170b48f675e249644', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:09,131 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:09,132 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：9ef91e8214030de170b48f675e249644
2021-02-01 17:05:09,134 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:09,135 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:09,135 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:09,135 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32047}
2021-02-01 17:05:09,135 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:10,766 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:10,766 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 24, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '其它颜色', 'normal': False, 'ppnId': 456, 'ppvId': 2981, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '魅族 16s Pro', 'price': 2193, 'productId': 32047, 'remoteReportNo': 'R1356166686998319104', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166687828844544', 'suggestRecyclePrice': 1930}, 'resultMessage': ''}
2021-02-01 17:05:10,766 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:10,771 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:10,771 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:10,771 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:10,771 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:10,771 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:11,035 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:11,036 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9730877d22a101e9a5a7c1b1bdc8fcff', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:11,036 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:11,036 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9730877d22a101e9a5a7c1b1bdc8fcff', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:11,036 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:11,036 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:11,036 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:11,036 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:11,269 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:11,270 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '00bbf2469f5870de43a61d612e0fd396', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:11,270 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:11,271 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：00bbf2469f5870de43a61d612e0fd396
2021-02-01 17:05:11,277 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:11,277 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:11,278 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:11,278 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32291}
2021-02-01 17:05:11,279 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:12,948 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:12,949 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2215', 'normal': False, 'ppnId': 1102, 'ppvId': 11280, 'type': 0}, {'checked': False, 'name': 'A2217', 'normal': False, 'ppnId': 1102, 'ppvId': 11017, 'type': 0}, {'checked': False, 'name': 'A2160', 'normal': False, 'ppnId': 1102, 'ppvId': 11279, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro', 'price': 5770, 'productId': 32291, 'remoteReportNo': 'R1356166696037085184', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166696968232960', 'suggestRecyclePrice': 5308}, 'resultMessage': ''}
2021-02-01 17:05:12,949 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:12,955 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:12,955 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:12,955 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:12,955 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:12,955 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:13,303 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:13,304 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'be418f0fea7d6acfb7f83f562c412206', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:13,304 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:13,304 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'be418f0fea7d6acfb7f83f562c412206', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:13,305 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:13,305 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:13,305 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:13,305 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:13,536 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:13,536 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '9bc1713cfe48273e9b167f95172b9d8a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:13,536 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:13,536 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：9bc1713cfe48273e9b167f95172b9d8a
2021-02-01 17:05:13,537 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:13,537 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:13,538 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:13,538 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35548}
2021-02-01 17:05:13,538 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:15,197 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:15,200 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '16G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 11446, 'type': 0}, {'checked': False, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 红魔 5S（5G版）', 'price': 3105, 'productId': 35548, 'remoteReportNo': 'R1356166705398730752', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166706195705856', 'suggestRecyclePrice': 2794}, 'resultMessage': ''}
2021-02-01 17:05:15,200 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:15,217 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:15,217 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:15,217 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:15,218 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:15,218 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:15,480 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:15,481 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8814ee8ad9c4b1b2597c9544d15ac2e5', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:15,481 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:15,481 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8814ee8ad9c4b1b2597c9544d15ac2e5', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:15,481 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:15,481 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:15,481 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:15,481 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:15,709 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:15,710 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '7cc4793ef661178dfc7c6b57e144c7a5', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:15,710 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:15,711 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：7cc4793ef661178dfc7c6b57e144c7a5
2021-02-01 17:05:15,715 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:15,716 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:15,716 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:15,716 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 28684}
2021-02-01 17:05:15,716 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:17,187 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:17,188 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 7, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 607, 'ppvItems': [{'checked': True, 'name': '其他型号', 'normal': False, 'ppnId': 607, 'ppvId': 4010, 'type': 0}, {'checked': False, 'name': 'A7000', 'normal': False, 'ppnId': 607, 'ppvId': 3318, 'type': 0}, {'checked': False, 'name': 'A7009', 'normal': False, 'ppnId': 607, 'ppvId': 3319, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '三星 Galaxy A7（2015版）', 'price': 133, 'productId': 28684, 'remoteReportNo': 'R1356166714269683712', 'repair': [{'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166714890493952', 'suggestRecyclePrice': 93}, 'resultMessage': ''}
2021-02-01 17:05:17,188 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:17,192 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:17,192 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:17,192 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:17,192 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:17,192 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:17,454 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:17,454 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'be9178091523a64c17a3c7f6c2bea6c9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:17,454 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:17,454 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'be9178091523a64c17a3c7f6c2bea6c9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:17,454 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:17,455 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:17,455 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:17,455 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:17,704 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:17,704 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'f841801b93b7e03da84565243919f43e', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:17,704 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:17,704 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：f841801b93b7e03da84565243919f43e
2021-02-01 17:05:17,706 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:17,706 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:17,706 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:17,706 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 25935}
2021-02-01 17:05:17,706 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:19,254 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:19,255 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 356, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '6G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 4569, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '4G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 3965, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '锤子 坚果 Pro2', 'price': 900, 'productId': 25935, 'remoteReportNo': 'R1356166722821861376', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166723568513024', 'suggestRecyclePrice': 750}, 'resultMessage': ''}
2021-02-01 17:05:19,255 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:19,261 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:19,261 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:19,261 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:19,261 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:19,262 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:19,596 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:19,596 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '7aefa351a0ddbd11dddebba5ceb75a45', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:19,596 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:19,596 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '7aefa351a0ddbd11dddebba5ceb75a45', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:19,596 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:19,596 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:19,596 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:19,596 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:19,807 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:19,807 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '78301da3909a914b78198229eb633308', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:19,807 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:19,808 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：78301da3909a914b78198229eb633308
2021-02-01 17:05:19,811 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:19,811 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:19,811 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:19,811 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35582}
2021-02-01 17:05:19,811 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:21,562 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:21,562 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 485, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 9720, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '黑鲨游戏手机 3s（5G版）', 'price': 3537, 'productId': 35582, 'remoteReportNo': 'R1356166731806052352', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166732548513792', 'suggestRecyclePrice': 3183}, 'resultMessage': ''}
2021-02-01 17:05:21,562 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:21,567 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:21,567 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:21,568 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:21,568 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:21,568 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:21,822 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:21,822 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd291fa2177f902d1c643551f5e5bff1e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:21,823 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:21,823 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd291fa2177f902d1c643551f5e5bff1e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:21,823 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:21,823 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:21,823 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:21,823 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:22,044 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:22,044 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'f03fd614a8f5b81397b771dc5fc7c38b', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:22,044 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:22,044 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：f03fd614a8f5b81397b771dc5fc7c38b
2021-02-01 17:05:22,046 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:22,046 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:22,046 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:22,046 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36044}
2021-02-01 17:05:22,046 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:23,694 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:23,694 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1908, 'ppvItems': [{'checked': True, 'name': 'A2400', 'normal': False, 'ppnId': 1908, 'ppvId': 12646, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1908, 'ppvId': 12647, 'type': 0}, {'checked': False, 'name': 'A2398', 'normal': False, 'ppnId': 1908, 'ppvId': 12994, 'type': 0}, {'checked': False, 'name': 'A2399', 'normal': False, 'ppnId': 1908, 'ppvId': 13020, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 mini', 'price': 5370, 'productId': 36044, 'remoteReportNo': 'R1356166741423669248', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166742010867712', 'suggestRecyclePrice': 4940}, 'resultMessage': ''}
2021-02-01 17:05:23,695 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:23,701 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:23,701 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:23,702 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:23,702 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:23,702 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:23,944 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:23,944 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1faa74a467542851abb8b56bddfc2f21', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:23,944 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:23,944 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1faa74a467542851abb8b56bddfc2f21', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:23,944 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:23,945 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:23,945 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:23,945 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:24,168 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:24,168 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3a0ea236e6b7c20b80d35cf80e855296', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:24,168 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:24,168 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3a0ea236e6b7c20b80d35cf80e855296
2021-02-01 17:05:24,169 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:24,169 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:24,169 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:24,170 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 17:05:24,170 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:25,987 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:25,988 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2218', 'normal': False, 'ppnId': 1102, 'ppvId': 11282, 'type': 0}, {'checked': False, 'name': 'A2220', 'normal': False, 'ppnId': 1102, 'ppvId': 11018, 'type': 0}, {'checked': False, 'name': 'A2161', 'normal': False, 'ppnId': 1102, 'ppvId': 11281, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro Max', 'price': 6500, 'productId': 32292, 'remoteReportNo': 'R1356166750130982912', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166750978289664', 'suggestRecyclePrice': 5980}, 'resultMessage': ''}
2021-02-01 17:05:25,988 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:25,995 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:05:25,995 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:25,995 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:25,995 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:05:25,996 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:05:26,256 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:26,257 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '11753d9f2589cda7040c87799e13cccf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:26,257 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:26,257 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '11753d9f2589cda7040c87799e13cccf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:05:26,257 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:26,257 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:05:26,257 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:05:26,257 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:05:26,469 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:26,470 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'cb0dc722a8f13409c0cd49459ed7bd87', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:05:26,470 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:05:26,470 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：cb0dc722a8f13409c0cd49459ed7bd87
2021-02-01 17:05:26,473 JDX INFO handle_request.py-25 line：**************** 发起一次HTTP请求 ****************
2021-02-01 17:05:26,473 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:05:26,473 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:26,473 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 17:05:26,473 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:05:28,021 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:05:28,022 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2218', 'normal': False, 'ppnId': 1102, 'ppvId': 11282, 'type': 0}, {'checked': False, 'name': 'A2220', 'normal': False, 'ppnId': 1102, 'ppvId': 11018, 'type': 0}, {'checked': False, 'name': 'A2161', 'normal': False, 'ppnId': 1102, 'ppvId': 11281, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro Max', 'price': 6500, 'productId': 32292, 'remoteReportNo': 'R1356166759589199872', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356166760214147072', 'suggestRecyclePrice': 5980}, 'resultMessage': ''}
2021-02-01 17:05:28,022 JDX INFO handle_request.py-41 line：***************** HTTP请求结束 *****************
2021-02-01 17:12:37,055 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:37,055 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:37,055 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:37,056 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:37,056 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:37,340 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:37,341 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'afe45f8148d8adb4f0606a8ff195de6a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:37,341 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:37,341 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'afe45f8148d8adb4f0606a8ff195de6a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:37,341 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:37,342 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:37,342 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:37,342 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:37,628 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:37,629 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '2fe1c925806fdcec11a9b45aedb2fe92', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:37,630 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:37,630 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：2fe1c925806fdcec11a9b45aedb2fe92
2021-02-01 17:12:37,635 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:37,636 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 36047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:37,636 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:37,637 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:37,637 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:37,638 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36047}
2021-02-01 17:12:37,638 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:39,292 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:39,294 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356168568131072000', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168568806420480', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 17:12:39,294 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:39,296 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:39,304 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:39,304 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:39,304 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:39,304 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:39,304 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:39,564 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:39,565 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bc810e5d69ae1b083ba96ad51a1688e7', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:39,565 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:39,565 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'bc810e5d69ae1b083ba96ad51a1688e7', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:39,566 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:39,566 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:39,566 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:39,566 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:39,788 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:39,789 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '5a01ab36ed548ec60bfb947638eeca51', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:39,789 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:39,789 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：5a01ab36ed548ec60bfb947638eeca51
2021-02-01 17:12:39,790 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:39,791 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 36300, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:39,791 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:39,791 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:39,791 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:39,791 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36300}
2021-02-01 17:12:39,791 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:41,374 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:41,376 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 356, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '纯白色', 'normal': False, 'ppnId': 456, 'ppvId': 12784, 'type': 0}, {'checked': False, 'name': '浅黑色', 'normal': False, 'ppnId': 456, 'ppvId': 12782, 'type': 0}, {'checked': False, 'name': '松绿色', 'normal': False, 'ppnId': 456, 'ppvId': 12783, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '16G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 11427, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '锤子 坚果 R2', 'price': 4543, 'productId': 36300, 'remoteReportNo': 'R1356168577287286784', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168578134548480', 'suggestRecyclePrice': 4143}, 'resultMessage': ''}
2021-02-01 17:12:41,376 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:41,379 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:41,395 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:41,395 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:41,395 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:41,395 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:41,395 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:41,627 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:41,627 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e01b55aab7d9beaba37d2baf44772bc4', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:41,627 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:41,627 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e01b55aab7d9beaba37d2baf44772bc4', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:41,627 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:41,627 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:41,627 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:41,628 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:41,852 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:41,853 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '367d51b7bd4a0f3b02791a2ecddf3a4d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:41,853 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:41,854 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：367d51b7bd4a0f3b02791a2ecddf3a4d
2021-02-01 17:12:41,855 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:41,855 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:41,855 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:41,855 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:41,855 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:41,855 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 17:12:41,855 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:43,402 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:43,404 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '双网通', 'normal': False, 'ppnId': 492, 'ppvId': 3085, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi Note 8 Pro', 'price': 619, 'productId': 32068, 'remoteReportNo': 'R1356168585738752000', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168586514771968', 'suggestRecyclePrice': 495}, 'resultMessage': ''}
2021-02-01 17:12:43,405 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:43,407 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:43,422 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:43,422 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:43,422 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:43,423 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:43,423 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:43,762 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:43,763 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '07b4b93332bcd01a29c63948d752e385', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:43,763 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:43,763 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '07b4b93332bcd01a29c63948d752e385', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:43,763 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:43,763 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:43,763 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:43,763 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:43,990 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:43,991 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '7d935e1cc972b4e34bd01fdc1f124010', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:43,991 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:43,991 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：7d935e1cc972b4e34bd01fdc1f124010
2021-02-01 17:12:43,992 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:43,992 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 34701, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:43,992 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:43,992 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:43,992 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:43,992 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34701}
2021-02-01 17:12:43,992 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:45,586 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:45,589 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2275', 'normal': False, 'ppnId': 1102, 'ppvId': 11452, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}, {'checked': False, 'name': 'A2298', 'normal': False, 'ppnId': 1102, 'ppvId': 11447, 'type': 0}, {'checked': False, 'name': 'A2296', 'normal': False, 'ppnId': 1102, 'ppvId': 11448, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone SE 2', 'price': 2429, 'productId': 34701, 'remoteReportNo': 'R1356168594936868864', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168595800956928', 'suggestRecyclePrice': 2138}, 'resultMessage': ''}
2021-02-01 17:12:45,590 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:45,592 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:45,597 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:45,597 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:45,597 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:45,597 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:45,597 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:45,857 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:45,857 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a0f080fde5dba300b48fac4e649269a6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:45,858 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:45,858 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a0f080fde5dba300b48fac4e649269a6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:45,858 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:45,858 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:45,858 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:45,858 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:46,085 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:46,085 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c9d0a347ba139483d28c0ad62d0b895a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:46,085 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:46,085 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c9d0a347ba139483d28c0ad62d0b895a
2021-02-01 17:12:46,087 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:46,087 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:46,087 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:46,087 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:46,087 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:46,087 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 17:12:46,087 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:47,442 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:47,444 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '双网通', 'normal': False, 'ppnId': 492, 'ppvId': 3085, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi Note 8 Pro', 'price': 619, 'productId': 32068, 'remoteReportNo': 'R1356168603308691456', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168604072124416', 'suggestRecyclePrice': 495}, 'resultMessage': ''}
2021-02-01 17:12:47,445 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:47,445 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:47,453 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:47,453 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:47,453 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:47,453 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:47,453 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:47,717 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:47,717 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0920bd72e861e71eb1f361db203565eb', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:47,718 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:47,718 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0920bd72e861e71eb1f361db203565eb', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:47,719 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:47,719 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:47,720 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:47,720 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:47,975 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:47,976 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '5e3314a52779d7b7119bff8fa539245d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:47,976 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:47,976 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：5e3314a52779d7b7119bff8fa539245d
2021-02-01 17:12:47,978 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:47,978 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 36045, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:47,978 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:47,978 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:47,978 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:47,978 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36045}
2021-02-01 17:12:47,978 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:49,545 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:49,547 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1909, 'ppvItems': [{'checked': True, 'name': '其他型号', 'normal': False, 'ppnId': 1909, 'ppvId': 12649, 'type': 0}, {'checked': False, 'name': 'A2404', 'normal': False, 'ppnId': 1909, 'ppvId': 12648, 'type': 0}, {'checked': False, 'name': 'A2403', 'normal': False, 'ppnId': 1909, 'ppvId': 12978, 'type': 0}, {'checked': False, 'name': 'A2172', 'normal': False, 'ppnId': 1909, 'ppvId': 13014, 'type': 0}, {'checked': False, 'name': 'A2402', 'normal': False, 'ppnId': 1909, 'ppvId': 13023, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12', 'price': 5436, 'productId': 36045, 'remoteReportNo': 'R1356168611546304512', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168612360073216', 'suggestRecyclePrice': 5001}, 'resultMessage': ''}
2021-02-01 17:12:49,548 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:49,548 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:49,554 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:49,554 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:49,554 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:49,554 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:49,554 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:49,795 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:49,795 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c78cac89df84db220d28114c035b981c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:49,795 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:49,795 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c78cac89df84db220d28114c035b981c', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:49,796 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:49,796 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:49,796 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:49,796 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:50,024 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:50,024 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '20bdc38ac4424b46fd5879ccbb022990', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:50,024 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:50,024 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：20bdc38ac4424b46fd5879ccbb022990
2021-02-01 17:12:50,027 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:50,027 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 27627, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:50,027 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:50,027 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:50,027 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:50,027 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27627}
2021-02-01 17:12:50,028 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:51,506 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:51,509 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '运营商版全网通', 'normal': False, 'ppnId': 492, 'ppvId': 12114, 'type': 0}, {'checked': False, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4484, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '小米手机8 （青春版）', 'price': 581, 'productId': 27627, 'remoteReportNo': 'R1356168620052353024', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168620866121728', 'suggestRecyclePrice': 465}, 'resultMessage': ''}
2021-02-01 17:12:51,509 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:51,512 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:51,529 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:51,529 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:51,530 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:51,530 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:51,530 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:51,804 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:51,804 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '2117abaa6df9633e2c353840d7a804f8', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:51,805 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:51,805 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '2117abaa6df9633e2c353840d7a804f8', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:51,805 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:51,805 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:51,805 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:51,805 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:52,016 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:52,016 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '384c8d7efcf7eec829593867219ad914', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:52,017 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:52,018 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：384c8d7efcf7eec829593867219ad914
2021-02-01 17:12:52,023 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:52,024 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 34448, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:52,024 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:52,024 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:52,025 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:52,025 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34448}
2021-02-01 17:12:52,025 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:53,644 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:53,646 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 485, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '粉色', 'normal': False, 'ppnId': 456, 'ppvId': 2815, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '黑鲨游戏手机 3（5G版）', 'price': 2343, 'productId': 34448, 'remoteReportNo': 'R1356168628516458496', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168629305057280', 'suggestRecyclePrice': 2062}, 'resultMessage': ''}
2021-02-01 17:12:53,647 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:53,647 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:53,654 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:53,654 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:53,654 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:53,654 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:53,654 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:53,933 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:53,933 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '482e04818c8bd45b4c8f41abe831c30e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:53,934 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:53,934 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '482e04818c8bd45b4c8f41abe831c30e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:53,935 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:53,935 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:53,935 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:53,936 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:54,165 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:54,165 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '1f41b1a4995468a53875e19f58d69e32', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:54,165 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:54,165 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：1f41b1a4995468a53875e19f58d69e32
2021-02-01 17:12:54,166 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:54,166 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:54,166 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:54,167 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:54,167 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:54,167 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 17:12:54,167 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:55,785 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:55,785 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '星空色', 'normal': False, 'ppnId': 456, 'ppvId': 7419, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 Z18', 'price': 1227, 'productId': 27664, 'remoteReportNo': 'R1356168637580406784', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168638402506752', 'suggestRecyclePrice': 1043}, 'resultMessage': ''}
2021-02-01 17:12:55,786 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:55,786 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:55,794 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:55,794 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:55,794 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:55,794 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:55,794 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:56,032 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:56,033 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'af6e6c9945b20ee49e80ffd7b3cdefb5', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:56,034 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:56,034 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'af6e6c9945b20ee49e80ffd7b3cdefb5', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:56,035 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:56,035 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:56,036 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:56,036 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:56,264 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:56,264 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3a68cc309bf923228146ef9e14a88b0a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:56,265 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:56,265 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3a68cc309bf923228146ef9e14a88b0a
2021-02-01 17:12:56,266 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:56,266 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 26983, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:56,266 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:56,266 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:56,266 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:56,266 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 26983}
2021-02-01 17:12:56,267 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:57,723 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:57,723 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 18, 'categoryId': 1, 'deviceInfo': [{'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '联想 Z5', 'price': 624, 'productId': 26983, 'remoteReportNo': 'R1356168646258442240', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168646845636608', 'suggestRecyclePrice': 499}, 'resultMessage': ''}
2021-02-01 17:12:57,724 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:57,724 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:12:57,733 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:12:57,733 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:57,733 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:57,733 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:12:57,733 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:12:57,991 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:57,992 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a7660e5b934ba9a6bfcbad3323ca6dc6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:57,992 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:57,992 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a7660e5b934ba9a6bfcbad3323ca6dc6', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:12:57,992 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:57,992 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:12:57,992 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:12:57,992 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:12:58,235 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:12:58,236 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3963dbc39fdd15258cbcd9aacf1b285b', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:12:58,237 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:12:58,237 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3963dbc39fdd15258cbcd9aacf1b285b
2021-02-01 17:12:58,242 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:12:58,243 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32835, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:12:58,243 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:12:58,244 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:12:58,244 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:12:58,245 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32835}
2021-02-01 17:12:58,245 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:00,041 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:00,041 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '2G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 5125, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '3G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 3964, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi 8A', 'price': 390, 'productId': 32835, 'remoteReportNo': 'R1356168654751907840', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168655393632256', 'suggestRecyclePrice': 310}, 'resultMessage': ''}
2021-02-01 17:13:00,041 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:00,042 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:00,049 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:00,049 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:00,049 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:00,049 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:00,049 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:00,319 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:00,320 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '60a5507ab4fca508449d071cde12375a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:00,321 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:00,321 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '60a5507ab4fca508449d071cde12375a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:00,322 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:00,322 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:00,323 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:00,323 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:00,562 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:00,562 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '241bb96f94a58d40ae818c4cee2124fb', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:00,562 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:00,563 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：241bb96f94a58d40ae818c4cee2124fb
2021-02-01 17:13:00,564 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:00,564 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 35585, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:00,564 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:00,564 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:00,564 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:00,564 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35585}
2021-02-01 17:13:00,564 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:02,058 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:02,060 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 6712, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi K30 （至尊纪念版）', 'price': 2287, 'productId': 35585, 'remoteReportNo': 'R1356168664214179840', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168664994390016', 'suggestRecyclePrice': 2013}, 'resultMessage': ''}
2021-02-01 17:13:02,060 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:02,061 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:02,066 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:02,066 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:02,066 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:02,066 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:02,066 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:02,447 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:02,448 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '96f794487313dc1f476b09409f6ff734', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:02,448 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:02,448 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '96f794487313dc1f476b09409f6ff734', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:02,448 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:02,449 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:02,449 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:02,449 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:02,677 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:02,677 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '93a8af063e5bfa1a12035c6c18f82464', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:02,678 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:02,678 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：93a8af063e5bfa1a12035c6c18f82464
2021-02-01 17:13:02,684 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:02,685 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:02,685 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:02,686 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:02,686 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:02,687 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 17:13:02,687 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:03,996 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:03,998 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '星空色', 'normal': False, 'ppnId': 456, 'ppvId': 7419, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 Z18', 'price': 1227, 'productId': 27664, 'remoteReportNo': 'R1356168672879628288', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168673471078400', 'suggestRecyclePrice': 1043}, 'resultMessage': ''}
2021-02-01 17:13:03,998 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:04,001 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:04,007 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:04,007 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:04,007 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:04,007 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:04,007 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:04,274 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:04,274 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '78c0a9bbb376a8ba20ff7133058613d5', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:04,274 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:04,274 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '78c0a9bbb376a8ba20ff7133058613d5', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:04,275 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:04,275 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:04,275 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:04,275 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:04,522 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:04,522 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '5ea2d4cd00fa6e846201054fa6f021d3', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:04,522 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:04,523 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：5ea2d4cd00fa6e846201054fa6f021d3
2021-02-01 17:13:04,524 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:04,524 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:04,524 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:04,524 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:04,524 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:04,524 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32047}
2021-02-01 17:13:04,524 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:06,088 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:06,091 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 24, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '其它颜色', 'normal': False, 'ppnId': 456, 'ppvId': 2981, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '魅族 16s Pro', 'price': 2193, 'productId': 32047, 'remoteReportNo': 'R1356168680941064192', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168681767411712', 'suggestRecyclePrice': 1930}, 'resultMessage': ''}
2021-02-01 17:13:06,091 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:06,092 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:06,097 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:06,097 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:06,097 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:06,097 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:06,097 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:06,356 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:06,357 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'ac87987e837555f7efbe4c73df75a656', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:06,357 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:06,357 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'ac87987e837555f7efbe4c73df75a656', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:06,358 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:06,358 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:06,358 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:06,358 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:06,605 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:06,605 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '677d23ea850a5007e1f0946e4dae9db3', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:06,605 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:06,605 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：677d23ea850a5007e1f0946e4dae9db3
2021-02-01 17:13:06,607 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:06,607 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32291, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:06,607 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:06,607 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:06,607 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:06,607 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32291}
2021-02-01 17:13:06,607 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:08,167 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:08,169 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2215', 'normal': False, 'ppnId': 1102, 'ppvId': 11280, 'type': 0}, {'checked': False, 'name': 'A2217', 'normal': False, 'ppnId': 1102, 'ppvId': 11017, 'type': 0}, {'checked': False, 'name': 'A2160', 'normal': False, 'ppnId': 1102, 'ppvId': 11279, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro', 'price': 5770, 'productId': 32291, 'remoteReportNo': 'R1356168689380003840', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168690273464320', 'suggestRecyclePrice': 5308}, 'resultMessage': ''}
2021-02-01 17:13:08,170 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:08,172 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:08,195 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:08,195 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:08,195 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:08,195 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:08,195 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:08,464 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:08,464 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '5589aba6f476fa79f91b48f7818b6de4', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:08,464 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:08,464 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '5589aba6f476fa79f91b48f7818b6de4', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:08,464 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:08,464 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:08,464 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:08,465 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:08,696 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:08,696 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'dabc59835b4e3fa55ab8afe95798d67f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:08,697 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:08,697 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：dabc59835b4e3fa55ab8afe95798d67f
2021-02-01 17:13:08,698 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:08,698 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 35548, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:08,698 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:08,698 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:08,698 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:08,698 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35548}
2021-02-01 17:13:08,698 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:10,349 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:10,351 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '16G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 11446, 'type': 0}, {'checked': False, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 红魔 5S（5G版）', 'price': 3105, 'productId': 35548, 'remoteReportNo': 'R1356168698460729344', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168699224104960', 'suggestRecyclePrice': 2794}, 'resultMessage': ''}
2021-02-01 17:13:10,352 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:10,352 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:10,361 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:10,361 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:10,361 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:10,361 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:10,361 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:10,636 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:10,636 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b1a2ab6bd723c33e44ce9be73c94e167', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:10,637 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:10,637 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b1a2ab6bd723c33e44ce9be73c94e167', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:10,638 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:10,638 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:10,639 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:10,639 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:10,853 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:10,854 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '61e1a8d0c82d8ba3cd3c433d42c4ad2a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:10,854 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:10,855 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：61e1a8d0c82d8ba3cd3c433d42c4ad2a
2021-02-01 17:13:10,860 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:10,861 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 28684, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:10,861 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:10,861 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:10,862 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:10,862 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 28684}
2021-02-01 17:13:10,863 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:12,499 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:12,500 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 7, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 607, 'ppvItems': [{'checked': True, 'name': '其他型号', 'normal': False, 'ppnId': 607, 'ppvId': 4010, 'type': 0}, {'checked': False, 'name': 'A7000', 'normal': False, 'ppnId': 607, 'ppvId': 3318, 'type': 0}, {'checked': False, 'name': 'A7009', 'normal': False, 'ppnId': 607, 'ppvId': 3319, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '三星 Galaxy A7（2015版）', 'price': 133, 'productId': 28684, 'remoteReportNo': 'R1356168707587555328', 'repair': [{'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168708329938944', 'suggestRecyclePrice': 93}, 'resultMessage': ''}
2021-02-01 17:13:12,501 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:12,502 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:12,525 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:12,526 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:12,526 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:12,526 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:12,526 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:12,784 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:12,785 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '450c5a9f90558b0c9c9d08d0d567fe72', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:12,785 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:12,785 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '450c5a9f90558b0c9c9d08d0d567fe72', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:12,785 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:12,785 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:12,785 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:12,785 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:13,029 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:13,030 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'b815e2471f877cdb134a1b0a8b7b45d2', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:13,030 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:13,030 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：b815e2471f877cdb134a1b0a8b7b45d2
2021-02-01 17:13:13,032 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:13,032 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 25935, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:13,032 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:13,032 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:13,032 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:13,032 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 25935}
2021-02-01 17:13:13,032 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:14,583 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:14,585 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 356, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '6G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 4569, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '4G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 3965, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '锤子 坚果 Pro2', 'price': 900, 'productId': 25935, 'remoteReportNo': 'R1356168716668162048', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168717465133056', 'suggestRecyclePrice': 750}, 'resultMessage': ''}
2021-02-01 17:13:14,586 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:14,586 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:14,592 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:14,592 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:14,592 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:14,592 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:14,592 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:14,864 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:14,865 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c008b25c3c483c5322df5cb5350c4a98', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:14,865 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:14,865 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c008b25c3c483c5322df5cb5350c4a98', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:14,865 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:14,865 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:14,866 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:14,866 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:15,074 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:15,074 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '4661fa9a28340055d54ae6c3e1f0c3d7', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:15,074 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:15,074 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：4661fa9a28340055d54ae6c3e1f0c3d7
2021-02-01 17:13:15,075 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:15,075 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 35582, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:15,075 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:15,075 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:15,076 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:15,076 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35582}
2021-02-01 17:13:15,076 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:16,781 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:16,783 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 485, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 9720, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '黑鲨游戏手机 3s（5G版）', 'price': 3537, 'productId': 35582, 'remoteReportNo': 'R1356168725539106816', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168726264782848', 'suggestRecyclePrice': 3183}, 'resultMessage': ''}
2021-02-01 17:13:16,783 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:16,784 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:16,790 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:16,790 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:16,791 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:16,791 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:16,791 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:17,175 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:17,176 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4156786f595623baa707c039d43df45b', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:17,176 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:17,176 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4156786f595623baa707c039d43df45b', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:17,176 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:17,176 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:17,176 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:17,176 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:17,449 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:17,450 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '2506edd85046ff704fad692d19b9bd05', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:17,451 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:17,451 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：2506edd85046ff704fad692d19b9bd05
2021-02-01 17:13:17,456 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:17,457 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 36044, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:17,457 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:17,457 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:17,457 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:17,458 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36044}
2021-02-01 17:13:17,458 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:18,978 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:18,980 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1908, 'ppvItems': [{'checked': True, 'name': 'A2400', 'normal': False, 'ppnId': 1908, 'ppvId': 12646, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1908, 'ppvId': 12647, 'type': 0}, {'checked': False, 'name': 'A2398', 'normal': False, 'ppnId': 1908, 'ppvId': 12994, 'type': 0}, {'checked': False, 'name': 'A2399', 'normal': False, 'ppnId': 1908, 'ppvId': 13020, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 mini', 'price': 5370, 'productId': 36044, 'remoteReportNo': 'R1356168735202775040', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168735945236480', 'suggestRecyclePrice': 4940}, 'resultMessage': ''}
2021-02-01 17:13:18,981 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:18,981 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:18,989 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:18,989 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:18,989 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:18,989 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:18,989 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:19,258 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:19,258 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4ea659a15d90f3cbb1b75694df6cd9cf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:19,258 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:19,258 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '4ea659a15d90f3cbb1b75694df6cd9cf', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:19,258 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:19,258 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:19,259 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:19,259 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:19,488 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:19,489 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '11a6172f9cdc2d53d9b798c09bdf3b5e', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:19,489 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:19,489 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：11a6172f9cdc2d53d9b798c09bdf3b5e
2021-02-01 17:13:19,490 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:19,490 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:19,490 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:19,490 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:19,490 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:19,490 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 17:13:19,490 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:21,069 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:21,071 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2218', 'normal': False, 'ppnId': 1102, 'ppvId': 11282, 'type': 0}, {'checked': False, 'name': 'A2220', 'normal': False, 'ppnId': 1102, 'ppvId': 11018, 'type': 0}, {'checked': False, 'name': 'A2161', 'normal': False, 'ppnId': 1102, 'ppvId': 11281, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro Max', 'price': 6500, 'productId': 32292, 'remoteReportNo': 'R1356168743511748608', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168744421924864', 'suggestRecyclePrice': 5980}, 'resultMessage': ''}
2021-02-01 17:13:21,071 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:21,072 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:13:21,078 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:13:21,078 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:21,078 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:21,078 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:13:21,078 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:13:21,375 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:21,375 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0bcc067ceaaeb24ed28a04327ac39c43', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:21,375 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:21,375 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0bcc067ceaaeb24ed28a04327ac39c43', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:13:21,375 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:21,376 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:13:21,376 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:13:21,376 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:13:21,599 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:21,600 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '15479d11c08672fb7ded18f5d1ffb44f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:13:21,600 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:21,601 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：15479d11c08672fb7ded18f5d1ffb44f
2021-02-01 17:13:21,607 JDX INFO test_02_Manual_Inquiry.py-18 line：===================== 开始执行测试用例 ===================
2021-02-01 17:13:21,607 JDX INFO test_02_Manual_Inquiry.py-19 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:13:21,608 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:13:21,608 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:13:21,608 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:21,609 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 17:13:21,609 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:13:23,139 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:13:23,141 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2218', 'normal': False, 'ppnId': 1102, 'ppvId': 11282, 'type': 0}, {'checked': False, 'name': 'A2220', 'normal': False, 'ppnId': 1102, 'ppvId': 11018, 'type': 0}, {'checked': False, 'name': 'A2161', 'normal': False, 'ppnId': 1102, 'ppvId': 11281, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro Max', 'price': 6500, 'productId': 32292, 'remoteReportNo': 'R1356168752760147968', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356168753414512640', 'suggestRecyclePrice': 5980}, 'resultMessage': ''}
2021-02-01 17:13:23,142 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:13:23,142 JDX INFO test_02_Manual_Inquiry.py-25 line：===================== 测试用例执行结束 ===================
2021-02-01 17:17:33,962 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:33,962 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:33,962 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:33,963 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:33,963 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:34,258 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:34,258 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'ea8eb7ef755537522893d1275a4d3908', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:34,258 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:34,258 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'ea8eb7ef755537522893d1275a4d3908', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:34,259 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:34,259 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:34,259 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:34,259 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:34,479 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:34,479 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '8e94031ca6fb635d74eaaca48c235f9f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:34,479 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:34,479 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：8e94031ca6fb635d74eaaca48c235f9f
2021-02-01 17:17:34,481 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:34,481 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:34,481 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:34,481 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:34,481 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:34,481 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36047}
2021-02-01 17:17:34,481 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:34,629 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:34,630 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:34,630 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:34,630 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:34,630 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:34,891 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:34,892 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e286ff73bd9cdd5759b371375c8333f2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:34,892 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:34,893 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'e286ff73bd9cdd5759b371375c8333f2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:34,894 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:34,894 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:34,895 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:34,895 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:35,119 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:35,120 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '8e48e9b1e0e3cecb98e65e00cf174ee9', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:35,120 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:35,121 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：8e48e9b1e0e3cecb98e65e00cf174ee9
2021-02-01 17:17:35,124 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:35,124 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36300, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:35,125 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:35,125 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:35,125 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:35,125 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36300}
2021-02-01 17:17:35,125 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:35,169 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:35,169 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:35,169 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:35,169 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:35,169 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:35,459 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:35,460 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6b64563b04ea13ce1c9dc4eea82f3d4e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:35,460 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:35,460 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6b64563b04ea13ce1c9dc4eea82f3d4e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:35,460 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:35,460 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:35,460 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:35,460 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:35,710 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:35,710 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '85438c2333405325c303218bca11461d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:35,711 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:35,712 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：85438c2333405325c303218bca11461d
2021-02-01 17:17:35,717 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:35,717 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:35,718 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:35,718 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:35,719 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:35,719 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 17:17:35,719 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:35,779 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:35,779 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:35,779 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:35,779 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:35,779 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:36,018 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:36,018 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6253e3eadfc922a5b44d129441ceb656', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:36,018 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:36,019 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '6253e3eadfc922a5b44d129441ceb656', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:36,019 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:36,019 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:36,019 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:36,020 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:36,267 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:36,267 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '9a22957700031ecc2f9fb11634e326a1', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:36,267 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:36,268 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：9a22957700031ecc2f9fb11634e326a1
2021-02-01 17:17:36,270 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:36,270 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 34701, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:36,270 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:36,270 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:36,270 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:36,270 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34701}
2021-02-01 17:17:36,271 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:36,325 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:36,326 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:36,326 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:36,326 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:36,326 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:36,612 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:36,613 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '298a41733c6475c01d9b7ffe72e4237f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:36,613 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:36,613 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '298a41733c6475c01d9b7ffe72e4237f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:36,613 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:36,613 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:36,613 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:36,613 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:36,980 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:36,980 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '59150a19e7a0742d021ff10a169be1f9', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:36,980 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:36,980 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：59150a19e7a0742d021ff10a169be1f9
2021-02-01 17:17:36,981 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:36,982 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:36,982 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:36,982 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:36,982 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:36,982 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 17:17:36,982 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:37,020 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:37,020 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:37,020 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:37,020 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:37,020 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:37,283 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:37,284 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '33b9953103cd0e00db726d1b9b4bbba2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:37,284 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:37,285 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '33b9953103cd0e00db726d1b9b4bbba2', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:37,286 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:37,286 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:37,286 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:37,287 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:37,514 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:37,515 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '3edd2be441c4791a245936327edeef4c', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:37,515 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:37,516 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：3edd2be441c4791a245936327edeef4c
2021-02-01 17:17:37,522 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:37,522 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36045, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:37,523 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:37,523 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:37,523 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:37,524 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36045}
2021-02-01 17:17:37,524 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:37,579 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:37,579 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:37,579 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:37,579 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:37,579 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:37,949 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:37,949 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3bfdfcae1cfbca01c79419b6da8450a8', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:37,950 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:37,950 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '3bfdfcae1cfbca01c79419b6da8450a8', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:37,950 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:37,950 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:37,950 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:37,950 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:38,188 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:38,188 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '1d1806a9c4257d6172d02f3454795642', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:38,189 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:38,189 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：1d1806a9c4257d6172d02f3454795642
2021-02-01 17:17:38,191 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:38,191 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 27627, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:38,191 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:38,191 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:38,191 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:38,191 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27627}
2021-02-01 17:17:38,191 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:38,238 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:38,238 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:38,238 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:38,238 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:38,238 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:38,491 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:38,492 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '766a532e89ea3b2ae11fb28f45be96a9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:38,493 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:38,493 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '766a532e89ea3b2ae11fb28f45be96a9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:38,494 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:38,494 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:38,495 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:38,495 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:38,765 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:38,766 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '745a4d79af5bd56254d155054e819b50', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:38,766 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:38,767 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：745a4d79af5bd56254d155054e819b50
2021-02-01 17:17:38,772 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:38,773 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 34448, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:38,773 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:38,774 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:38,774 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:38,774 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34448}
2021-02-01 17:17:38,775 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:38,830 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:38,830 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:38,830 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:38,830 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:38,830 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:39,089 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:39,090 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8ea188c570197674084660e6f2092ba8', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:39,091 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:39,091 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '8ea188c570197674084660e6f2092ba8', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:39,092 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:39,092 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:39,093 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:39,093 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:39,336 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:39,337 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '07813b672e04510830c8a8e2aeb2f261', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:39,337 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:39,338 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：07813b672e04510830c8a8e2aeb2f261
2021-02-01 17:17:39,344 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:39,344 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:39,344 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:39,345 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:39,345 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:39,345 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 17:17:39,345 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:39,389 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:39,389 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:39,389 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:39,389 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:39,389 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:39,652 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:39,653 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '386fc349681a0f22ac36922ff3912760', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:39,653 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:39,653 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '386fc349681a0f22ac36922ff3912760', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:39,653 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:39,653 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:39,654 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:39,654 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:39,873 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:39,873 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '8a53de87f1ea370525440f59c249b79b', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:39,874 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:39,874 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：8a53de87f1ea370525440f59c249b79b
2021-02-01 17:17:39,877 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:39,877 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 26983, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:39,878 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:39,878 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:39,878 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:39,878 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 26983}
2021-02-01 17:17:39,878 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:39,929 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:39,929 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:39,929 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:39,929 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:39,929 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:40,179 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:40,179 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd886bf4fb5f297fcad0f419b60887416', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:40,179 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:40,179 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd886bf4fb5f297fcad0f419b60887416', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:40,179 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:40,179 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:40,180 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:40,180 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:40,410 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:40,410 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '10c8169c3a5894157fe12258d0f5ab27', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:40,411 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:40,411 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：10c8169c3a5894157fe12258d0f5ab27
2021-02-01 17:17:40,414 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:40,414 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32835, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:40,414 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:40,414 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:40,414 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:40,414 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32835}
2021-02-01 17:17:40,414 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:40,453 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:40,453 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:40,453 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:40,453 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:40,453 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:40,733 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:40,734 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'be8b870f316b51d6c678d396e9204919', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:40,734 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:40,734 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'be8b870f316b51d6c678d396e9204919', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:40,734 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:40,736 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:40,736 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:40,737 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:40,971 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:40,971 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '28d9356ccbc86999b6ef1e46622db25f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:40,971 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:40,972 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：28d9356ccbc86999b6ef1e46622db25f
2021-02-01 17:17:40,974 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:40,974 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 35585, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:40,974 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:40,975 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:40,975 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:40,975 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35585}
2021-02-01 17:17:40,975 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:41,022 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:41,022 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:41,022 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:41,022 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:41,022 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:41,300 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:41,300 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f5ad8aeb0a831db2027b54accc68c4e9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:41,301 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:41,301 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f5ad8aeb0a831db2027b54accc68c4e9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:41,302 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:41,303 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:41,303 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:41,303 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:41,551 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:41,552 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '06085862de8174ac3f3f37a8f5cfbfa1', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:41,552 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:41,553 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：06085862de8174ac3f3f37a8f5cfbfa1
2021-02-01 17:17:41,558 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:41,559 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:41,559 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:41,560 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:41,560 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:41,560 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 17:17:41,561 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:41,621 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:41,621 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:41,621 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:41,621 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:41,621 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:41,910 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:41,911 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '23966aacdd3747b174106f0c76cd6ca9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:41,911 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:41,911 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '23966aacdd3747b174106f0c76cd6ca9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:41,911 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:41,911 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:41,911 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:41,911 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:42,145 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:42,145 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'dd4e8956c1891da87b99f50fca63b69d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:42,146 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:42,146 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：dd4e8956c1891da87b99f50fca63b69d
2021-02-01 17:17:42,147 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:42,147 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:42,147 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:42,147 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:42,147 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:42,147 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32047}
2021-02-01 17:17:42,147 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:42,185 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:42,185 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:42,185 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:42,185 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:42,185 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:42,451 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:42,451 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '402f5edc385c824b585e3e2ee66e829a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:42,452 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:42,452 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '402f5edc385c824b585e3e2ee66e829a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:42,452 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:42,452 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:42,452 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:42,452 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:42,679 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:42,680 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '4d459cfa357df286cd27b46d5c92d026', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:42,680 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:42,681 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：4d459cfa357df286cd27b46d5c92d026
2021-02-01 17:17:42,686 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:42,687 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32291, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:42,687 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:42,688 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:42,688 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:42,688 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32291}
2021-02-01 17:17:42,689 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:42,741 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:42,742 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:42,742 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:42,742 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:42,742 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:43,037 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:43,038 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '48b9e70e7fdf161c2432ab537e8492e3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:43,039 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:43,039 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '48b9e70e7fdf161c2432ab537e8492e3', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:43,040 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:43,040 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:43,041 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:43,041 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:43,290 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:43,290 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '365109563c0714d68c08971b2989118f', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:43,290 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:43,290 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：365109563c0714d68c08971b2989118f
2021-02-01 17:17:43,291 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:43,292 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 35548, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:43,292 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:43,292 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:43,292 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:43,292 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35548}
2021-02-01 17:17:43,292 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:43,331 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:43,331 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:43,331 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:43,331 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:43,331 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:43,628 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:43,628 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd48b0be5accaa3ae47072faf85c4f698', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:43,629 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:43,629 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'd48b0be5accaa3ae47072faf85c4f698', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:43,630 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:43,630 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:43,631 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:43,631 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:43,872 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:43,872 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'c53808f71c559763be705b30aa31d781', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:43,872 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:43,872 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：c53808f71c559763be705b30aa31d781
2021-02-01 17:17:43,874 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:43,874 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 28684, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:43,874 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:43,874 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:43,875 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:43,875 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 28684}
2021-02-01 17:17:43,875 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:43,921 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:43,921 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:43,921 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:43,921 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:43,921 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:44,214 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:44,214 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f8f39f247667950d1266769e6f461924', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:44,214 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:44,214 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'f8f39f247667950d1266769e6f461924', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:44,215 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:44,215 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:44,215 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:44,215 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:44,419 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:44,419 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '6d784a88f65998d509ea696dde37bc85', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:44,419 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:44,419 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：6d784a88f65998d509ea696dde37bc85
2021-02-01 17:17:44,421 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:44,421 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 25935, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:44,421 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:44,421 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:44,421 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:44,421 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 25935}
2021-02-01 17:17:44,421 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:44,461 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:44,461 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:44,461 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:44,461 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:44,461 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:44,751 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:44,752 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9f364fdc232945a8d76552950a09580a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:44,752 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:44,753 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '9f364fdc232945a8d76552950a09580a', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:44,754 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:44,754 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:44,755 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:44,755 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:45,026 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:45,027 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'e27684fc70cecbedb2e279631838f673', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:45,027 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:45,027 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：e27684fc70cecbedb2e279631838f673
2021-02-01 17:17:45,029 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:45,029 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 35582, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:45,029 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:45,029 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:45,029 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:45,029 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35582}
2021-02-01 17:17:45,029 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:45,067 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:45,067 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:45,067 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:45,067 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:45,067 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:45,312 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:45,313 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '939a814767faf587177c3968e561f02e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:45,313 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:45,313 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '939a814767faf587177c3968e561f02e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:45,313 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:45,313 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:45,313 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:45,313 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:45,532 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:45,532 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '4ac3a2391d9ff2bef7e7a49781b6eabe', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:45,533 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:45,533 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：4ac3a2391d9ff2bef7e7a49781b6eabe
2021-02-01 17:17:45,536 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:45,536 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36044, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:45,536 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:45,536 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:45,536 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:45,536 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36044}
2021-02-01 17:17:45,536 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:45,576 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:45,576 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:45,576 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:45,576 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:45,576 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:45,840 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:45,841 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c1c159131c0e07270e4ca9b6e40df432', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:45,842 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:45,842 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'c1c159131c0e07270e4ca9b6e40df432', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:45,843 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:45,843 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:45,844 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:45,845 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:46,091 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:46,092 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '091ddaa37d3f210c0dd420d7bdd4f56d', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:46,092 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:46,093 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：091ddaa37d3f210c0dd420d7bdd4f56d
2021-02-01 17:17:46,098 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:46,099 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:46,099 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:46,100 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:46,100 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:46,101 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 17:17:46,101 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:46,156 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 17:17:46,156 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:46,156 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:46,156 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 17:17:46,156 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 17:17:46,416 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:46,416 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a5affecc81a011407d2ba411f79884e9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:46,417 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:46,417 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'a5affecc81a011407d2ba411f79884e9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 17:17:46,418 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:46,419 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 17:17:46,419 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 17:17:46,420 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 17:17:46,673 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 17:17:46,674 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'ef7c17d75d1c5368a6da279082a8ff60', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 17:17:46,674 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 17:17:46,675 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：ef7c17d75d1c5368a6da279082a8ff60
2021-02-01 17:17:46,680 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 17:17:46,681 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 17:17:46,681 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 17:17:46,682 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 17:17:46,682 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 17:17:46,682 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 17:17:46,683 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:08,990 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 18:29:08,990 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:08,991 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:29:08,991 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 18:29:08,991 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 18:29:09,278 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:29:09,279 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'fddefa9ab3716ce2c995e0c9da4e3a0e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:29:09,280 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:29:09,280 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'fddefa9ab3716ce2c995e0c9da4e3a0e', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:29:09,284 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,284 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:29:09,285 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 18:29:09,285 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 18:29:09,568 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:29:09,568 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'd928c93570589b8987934bc96b9354c9', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 18:29:09,568 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:29:09,568 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：d928c93570589b8987934bc96b9354c9
2021-02-01 18:29:09,569 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,569 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,569 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,569 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,569 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,569 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36047}
2021-02-01 18:29:09,570 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,707 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,707 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36300, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,707 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,707 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,707 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,707 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36300}
2021-02-01 18:29:09,708 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,745 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,745 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,745 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,745 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,745 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,745 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 18:29:09,745 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,784 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,784 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 34701, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,784 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,784 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,784 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,784 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34701}
2021-02-01 18:29:09,784 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,823 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,823 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,823 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,823 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,823 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,823 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 18:29:09,824 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,865 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,865 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36045, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,865 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,865 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,865 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,865 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36045}
2021-02-01 18:29:09,866 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,904 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,904 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 27627, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,905 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,905 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,905 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,905 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27627}
2021-02-01 18:29:09,905 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,949 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,949 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 34448, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,949 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,949 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,949 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,949 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34448}
2021-02-01 18:29:09,950 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,988 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:09,988 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:09,988 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:09,988 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:09,988 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:09,989 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 18:29:09,989 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,026 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,026 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 26983, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,026 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,026 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,026 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,026 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 26983}
2021-02-01 18:29:10,026 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,066 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,066 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32835, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,066 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,066 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,066 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,066 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32835}
2021-02-01 18:29:10,066 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,105 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,105 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 35585, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,105 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,105 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,105 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,105 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35585}
2021-02-01 18:29:10,106 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,157 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,157 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,158 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,158 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,158 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,158 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 18:29:10,158 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,209 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,209 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,209 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,209 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,209 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,209 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32047}
2021-02-01 18:29:10,209 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,248 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,248 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32291, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,248 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,248 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,248 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,248 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32291}
2021-02-01 18:29:10,248 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,287 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,287 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 35548, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,288 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,288 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,288 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,288 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35548}
2021-02-01 18:29:10,288 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,326 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,326 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 28684, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,326 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,326 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,326 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,327 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 28684}
2021-02-01 18:29:10,327 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,377 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,377 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 25935, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,377 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,377 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,377 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,377 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 25935}
2021-02-01 18:29:10,377 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,427 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,427 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 35582, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,427 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,427 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,427 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,427 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35582}
2021-02-01 18:29:10,428 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,479 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,479 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 36044, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,479 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,479 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,479 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,479 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36044}
2021-02-01 18:29:10,479 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,531 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,531 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,531 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,531 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,531 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,531 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 18:29:10,531 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,586 JDX INFO test_02_Manual_Inquiry.py-20 line：===================== 开始执行测试用例 ===================
2021-02-01 18:29:10,586 JDX INFO test_02_Manual_Inquiry.py-21 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:29:10,586 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:29:10,586 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:29:10,587 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:29:10,587 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 18:29:10,587 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:41,665 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 18:30:41,665 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:41,665 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:30:41,665 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 18:30:41,666 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 18:30:41,987 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:30:41,987 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '7e08246d21a37b46fd805a1e37f1fa0f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:30:41,987 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:30:41,987 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '7e08246d21a37b46fd805a1e37f1fa0f', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:30:41,988 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:41,988 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:30:41,988 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 18:30:41,988 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 18:30:42,215 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:30:42,215 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'cfaebc2d47b826a813c4644ac0c5cb40', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 18:30:42,216 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:30:42,217 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：cfaebc2d47b826a813c4644ac0c5cb40
2021-02-01 18:30:42,222 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,223 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,223 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,224 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,224 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,224 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36047}
2021-02-01 18:30:42,225 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,363 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,363 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36300, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,363 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,363 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,363 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,363 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36300}
2021-02-01 18:30:42,363 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,401 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,401 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,401 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,401 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,402 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,402 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 18:30:42,402 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,445 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,445 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 34701, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,445 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,445 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,445 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,445 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34701}
2021-02-01 18:30:42,446 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,484 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,485 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,485 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,485 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,485 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,485 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 18:30:42,485 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,527 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,527 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36045, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,527 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,527 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,527 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,527 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36045}
2021-02-01 18:30:42,528 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,566 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,566 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 27627, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,566 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,566 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,566 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,566 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27627}
2021-02-01 18:30:42,566 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,614 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,614 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 34448, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,615 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,615 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,615 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,615 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34448}
2021-02-01 18:30:42,615 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,665 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,665 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,665 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,665 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,665 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,665 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 18:30:42,665 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,705 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,705 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 26983, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,705 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,705 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,705 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,705 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 26983}
2021-02-01 18:30:42,705 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,745 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,745 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32835, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,745 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,745 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,745 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,745 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32835}
2021-02-01 18:30:42,746 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,783 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,783 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 35585, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,783 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,783 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,783 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,783 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35585}
2021-02-01 18:30:42,784 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,832 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,832 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,832 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,832 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,832 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,833 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 18:30:42,833 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,870 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,870 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,870 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,870 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,870 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,870 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32047}
2021-02-01 18:30:42,870 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,909 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,909 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32291, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,909 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,909 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,909 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,909 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32291}
2021-02-01 18:30:42,910 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,948 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,948 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 35548, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,948 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,948 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,948 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,948 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35548}
2021-02-01 18:30:42,949 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,987 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:42,988 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 28684, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:42,988 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:42,988 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:42,988 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:42,988 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 28684}
2021-02-01 18:30:42,988 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,036 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:43,036 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 25935, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:43,036 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:43,036 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:43,036 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,036 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 25935}
2021-02-01 18:30:43,037 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,076 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:43,076 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 35582, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:43,076 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:43,076 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:43,076 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,076 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35582}
2021-02-01 18:30:43,077 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,116 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:43,116 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36044, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:43,116 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:43,116 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:43,116 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,116 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36044}
2021-02-01 18:30:43,116 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,155 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:43,155 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:43,155 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:43,155 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:43,155 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,155 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 18:30:43,155 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,195 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:30:43,195 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:30:43,195 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:30:43,195 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:30:43,195 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:30:43,195 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 18:30:43,196 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:31:30,439 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 18:31:30,439 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:31:30,439 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:31:30,439 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 18:31:30,440 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 18:31:30,726 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:31:30,727 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1ca8a7dad79847a775312d849be8d868', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:31:30,727 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:31:30,727 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '1ca8a7dad79847a775312d849be8d868', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:31:30,727 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:31:30,728 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:31:30,728 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 18:31:30,728 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 18:31:30,944 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:31:30,944 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '6e9a6ce63778a4ff700de2ca8a3ab19a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 18:31:30,945 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:31:30,945 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：6e9a6ce63778a4ff700de2ca8a3ab19a
2021-02-01 18:31:53,427 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 18:31:53,427 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:31:53,428 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:31:53,428 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 18:31:53,428 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 18:31:53,787 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:31:53,789 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'cf63253e4553963d4b4c555044491b90', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:31:53,789 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:31:53,789 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'cf63253e4553963d4b4c555044491b90', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:31:53,790 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:31:53,790 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:31:53,790 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 18:31:53,790 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 18:31:54,038 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:31:54,039 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '32a8eca1ad6000102291e224b3dc1dc2', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 18:31:54,039 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:31:54,039 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：32a8eca1ad6000102291e224b3dc1dc2
2021-02-01 18:34:12,157 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 18:34:12,157 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:12,157 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:34:12,157 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 18:34:12,157 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 18:34:12,416 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:12,416 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b4fe81738d7ce0b49d73a7a5a047d3af', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:34:12,417 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:12,417 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': 'b4fe81738d7ce0b49d73a7a5a047d3af', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:34:12,417 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:12,417 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:34:12,417 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 18:34:12,418 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 18:34:12,611 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:12,612 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': '321fbeb63ade27349dfa80ebef78975c', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 18:34:12,612 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:12,613 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：321fbeb63ade27349dfa80ebef78975c
2021-02-01 18:34:39,309 JDX INFO conftest.py-20 line：前置条件：开始运行！
2021-02-01 18:34:39,309 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:39,309 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:34:39,309 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-account-service/app/authentication/captcha/register/login
2021-02-01 18:34:39,309 JDX INFO handle_request.py-30 line：请求数据为：{'captcha': '000000', 'mobile': '19128326083', 'appChannel': 'jdx_00002'}
2021-02-01 18:34:39,568 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:39,569 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0701b2b0ed33cd520f72eb561c6917e9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:34:39,570 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:39,570 JDX INFO conftest.py-25 line：前置条件：登陆成功！响应结果为{'code': 200, 'data': {'optMerChantId': 147997, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'token': '0701b2b0ed33cd520f72eb561c6917e9', 'tokenExpiresIn': 86400, 'userId': 6}, 'resultMessage': ''}
2021-02-01 18:34:39,573 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:39,573 JDX INFO handle_request.py-26 line：请求方法为：post
2021-02-01 18:34:39,573 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/sj-api/auth/refresh-token
2021-02-01 18:34:39,574 JDX INFO handle_request.py-30 line：请求数据为：{'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2'}
2021-02-01 18:34:39,803 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:39,803 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'resultMessage': '', 'data': {'merchantId': 147997, 'merchantName': '梁荣寅', 'accessToken': 'a2a7127850a717a45fddf47de4f6532a', 'tokenExpiresIn': 86400, 'refreshToken': 'aa8280b1a60f3d523ada8d07c7c0c1c2', 'refreshTokenExpiresIn': 2592000, 'newMerchant': 0}}
2021-02-01 18:34:39,803 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:39,804 JDX INFO conftest.py-34 line：前置条件：获取accessToken成功！它的值是：a2a7127850a717a45fddf47de4f6532a
2021-02-01 18:34:39,806 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:39,806 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:39,806 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:39,806 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:39,806 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:39,806 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36047}
2021-02-01 18:34:39,806 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:41,511 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:41,511 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '海蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 12645, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '石墨色', 'normal': False, 'ppnId': 456, 'ppvId': 12642, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1911, 'ppvItems': [{'checked': True, 'name': 'A2412', 'normal': False, 'ppnId': 1911, 'ppvId': 12652, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1911, 'ppvId': 12653, 'type': 0}, {'checked': False, 'name': 'A2411', 'normal': False, 'ppnId': 1911, 'ppvId': 12986, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 Pro Max', 'price': 9633, 'productId': 36047, 'remoteReportNo': 'R1356189213535539200', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189214449971200', 'suggestRecyclePrice': 9033}, 'resultMessage': ''}
2021-02-01 18:34:41,512 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:41,512 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:41,526 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:41,526 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36300, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:41,526 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:41,526 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:41,526 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:41,526 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36300}
2021-02-01 18:34:41,526 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:43,465 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:43,467 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 356, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '纯白色', 'normal': False, 'ppnId': 456, 'ppvId': 12784, 'type': 0}, {'checked': False, 'name': '浅黑色', 'normal': False, 'ppnId': 456, 'ppvId': 12782, 'type': 0}, {'checked': False, 'name': '松绿色', 'normal': False, 'ppnId': 456, 'ppvId': 12783, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '16G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 11427, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '锤子 坚果 R2', 'price': 4543, 'productId': 36300, 'remoteReportNo': 'R1356189220816859136', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189221748056064', 'suggestRecyclePrice': 4143}, 'resultMessage': ''}
2021-02-01 18:34:43,467 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:43,468 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:43,477 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:43,477 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:43,477 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:43,477 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:43,477 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:43,478 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 18:34:43,478 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:45,081 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:45,083 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '双网通', 'normal': False, 'ppnId': 492, 'ppvId': 3085, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi Note 8 Pro', 'price': 619, 'productId': 32068, 'remoteReportNo': 'R1356189228580564992', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189229369110528', 'suggestRecyclePrice': 495}, 'resultMessage': ''}
2021-02-01 18:34:45,083 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:45,084 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:45,090 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:45,090 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 34701, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:45,090 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:45,090 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:45,090 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:45,090 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34701}
2021-02-01 18:34:45,090 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:46,815 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:46,817 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2275', 'normal': False, 'ppnId': 1102, 'ppvId': 11452, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}, {'checked': False, 'name': 'A2298', 'normal': False, 'ppnId': 1102, 'ppvId': 11447, 'type': 0}, {'checked': False, 'name': 'A2296', 'normal': False, 'ppnId': 1102, 'ppvId': 11448, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone SE 2', 'price': 2429, 'productId': 34701, 'remoteReportNo': 'R1356189235404697600', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189236264542208', 'suggestRecyclePrice': 2138}, 'resultMessage': ''}
2021-02-01 18:34:46,818 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:46,820 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:46,826 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:46,826 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32068, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:46,826 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:46,826 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:46,826 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:46,826 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32068}
2021-02-01 18:34:46,826 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:48,398 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:48,399 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '双网通', 'normal': False, 'ppnId': 492, 'ppvId': 3085, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi Note 8 Pro', 'price': 619, 'productId': 32068, 'remoteReportNo': 'R1356189242321125376', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189243088674816', 'suggestRecyclePrice': 495}, 'resultMessage': ''}
2021-02-01 18:34:48,400 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:48,402 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:48,411 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:48,411 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36045, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:48,411 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:48,411 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:48,411 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:48,411 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36045}
2021-02-01 18:34:48,412 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:50,417 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:50,418 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1909, 'ppvItems': [{'checked': True, 'name': '其他型号', 'normal': False, 'ppnId': 1909, 'ppvId': 12649, 'type': 0}, {'checked': False, 'name': 'A2404', 'normal': False, 'ppnId': 1909, 'ppvId': 12648, 'type': 0}, {'checked': False, 'name': 'A2403', 'normal': False, 'ppnId': 1909, 'ppvId': 12978, 'type': 0}, {'checked': False, 'name': 'A2172', 'normal': False, 'ppnId': 1909, 'ppvId': 13014, 'type': 0}, {'checked': False, 'name': 'A2402', 'normal': False, 'ppnId': 1909, 'ppvId': 13023, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12', 'price': 5436, 'productId': 36045, 'remoteReportNo': 'R1356189249254232064', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189250143498240', 'suggestRecyclePrice': 5001}, 'resultMessage': ''}
2021-02-01 18:34:50,418 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:50,418 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:50,431 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:50,431 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 27627, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:50,431 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:50,431 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:50,431 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:50,431 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27627}
2021-02-01 18:34:50,432 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:51,941 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:51,943 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '运营商版全网通', 'normal': False, 'ppnId': 492, 'ppvId': 12114, 'type': 0}, {'checked': False, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '4G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4484, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '小米手机8 （青春版）', 'price': 581, 'productId': 27627, 'remoteReportNo': 'R1356189257710006272', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189258532106240', 'suggestRecyclePrice': 465}, 'resultMessage': ''}
2021-02-01 18:34:51,944 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:51,945 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:51,950 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:51,950 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 34448, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:51,950 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:51,950 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:51,950 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:51,950 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 34448}
2021-02-01 18:34:51,950 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:53,675 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:53,677 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 485, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '粉色', 'normal': False, 'ppnId': 456, 'ppvId': 2815, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '灰色', 'normal': False, 'ppnId': 456, 'ppvId': 2902, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '黑鲨游戏手机 3（5G版）', 'price': 2343, 'productId': 34448, 'remoteReportNo': 'R1356189264483827712', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189265205243904', 'suggestRecyclePrice': 2062}, 'resultMessage': ''}
2021-02-01 18:34:53,678 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:53,678 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:53,684 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:53,684 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:53,684 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:53,684 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:53,684 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:53,684 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 18:34:53,684 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:55,547 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:55,549 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '星空色', 'normal': False, 'ppnId': 456, 'ppvId': 7419, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 Z18', 'price': 1227, 'productId': 27664, 'remoteReportNo': 'R1356189271836364800', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189273237331968', 'suggestRecyclePrice': 1043}, 'resultMessage': ''}
2021-02-01 18:34:55,550 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:55,550 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:55,559 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:55,559 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 26983, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:55,559 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:55,559 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:55,559 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:55,559 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 26983}
2021-02-01 18:34:55,559 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:57,283 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:57,285 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 18, 'categoryId': 1, 'deviceInfo': [{'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '联想 Z5', 'price': 624, 'productId': 26983, 'remoteReportNo': 'R1356189279407140864', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189280191488000', 'suggestRecyclePrice': 499}, 'resultMessage': ''}
2021-02-01 18:34:57,285 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:57,286 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:57,291 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:57,291 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32835, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:57,291 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:57,291 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:57,291 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:57,291 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32835}
2021-02-01 18:34:57,291 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:58,873 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:34:58,875 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '橙色', 'normal': False, 'ppnId': 456, 'ppvId': 2958, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}, {'checked': False, 'name': '移动版', 'normal': False, 'ppnId': 492, 'ppvId': 2567, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '2G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 5125, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '3G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 3964, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi 8A', 'price': 390, 'productId': 32835, 'remoteReportNo': 'R1356189286520639488', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189287334391808', 'suggestRecyclePrice': 310}, 'resultMessage': ''}
2021-02-01 18:34:58,875 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:34:58,876 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:34:58,883 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:34:58,883 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 35585, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:34:58,883 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:34:58,883 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:34:58,883 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:34:58,883 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35585}
2021-02-01 18:34:58,883 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:00,724 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:00,726 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 184, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 6712, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': 'Redmi K30 （至尊纪念版）', 'price': 2287, 'productId': 35585, 'remoteReportNo': 'R1356189294150078464', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189294796054528', 'suggestRecyclePrice': 2013}, 'resultMessage': ''}
2021-02-01 18:35:00,726 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:00,729 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:00,753 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:00,753 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 27664, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:00,753 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:00,754 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:00,754 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:00,754 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 27664}
2021-02-01 18:35:00,754 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:02,189 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:02,191 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '星空色', 'normal': False, 'ppnId': 456, 'ppvId': 7419, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 Z18', 'price': 1227, 'productId': 27664, 'remoteReportNo': 'R1356189300714225664', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189301322395648', 'suggestRecyclePrice': 1043}, 'resultMessage': ''}
2021-02-01 18:35:02,191 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:02,192 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:02,199 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:02,199 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32047, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:02,199 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:02,199 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:02,199 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:02,199 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32047}
2021-02-01 18:35:02,199 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:04,456 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:04,458 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 24, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '其它颜色', 'normal': False, 'ppnId': 456, 'ppvId': 2981, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '8G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 5835, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '魅族 16s Pro', 'price': 2193, 'productId': 32047, 'remoteReportNo': 'R1356189308549115904', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189309522255872', 'suggestRecyclePrice': 1930}, 'resultMessage': ''}
2021-02-01 18:35:04,459 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:04,461 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:04,486 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:04,487 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32291, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:04,487 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:04,487 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:04,487 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:04,487 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32291}
2021-02-01 18:35:04,487 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:06,165 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:06,167 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2215', 'normal': False, 'ppnId': 1102, 'ppvId': 11280, 'type': 0}, {'checked': False, 'name': 'A2217', 'normal': False, 'ppnId': 1102, 'ppvId': 11017, 'type': 0}, {'checked': False, 'name': 'A2160', 'normal': False, 'ppnId': 1102, 'ppvId': 11279, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro', 'price': 5770, 'productId': 32291, 'remoteReportNo': 'R1356189316719611904', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189317709537280', 'suggestRecyclePrice': 5308}, 'resultMessage': ''}
2021-02-01 18:35:06,167 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:06,168 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:06,176 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:06,176 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 35548, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:06,176 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:06,176 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:06,176 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:06,177 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35548}
2021-02-01 18:35:06,177 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:07,797 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:07,799 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 342, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '16G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 11446, 'type': 0}, {'checked': False, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}, {'checked': False, 'name': '8G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 5032, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '努比亚 红魔 5S（5G版）', 'price': 3105, 'productId': 35548, 'remoteReportNo': 'R1356189323837353984', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189324663697408', 'suggestRecyclePrice': 2794}, 'resultMessage': ''}
2021-02-01 18:35:07,800 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:07,800 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:07,806 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:07,806 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 28684, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:07,806 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:07,806 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:07,806 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:07,806 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 28684}
2021-02-01 18:35:07,806 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:09,872 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:09,874 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 7, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '非大陆国行', 'normal': False, 'ppnId': 314, 'ppvId': 3445, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 607, 'ppvItems': [{'checked': True, 'name': '其他型号', 'normal': False, 'ppnId': 607, 'ppvId': 4010, 'type': 0}, {'checked': False, 'name': 'A7000', 'normal': False, 'ppnId': 607, 'ppvId': 3318, 'type': 0}, {'checked': False, 'name': 'A7009', 'normal': False, 'ppnId': 607, 'ppvId': 3319, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '三星 Galaxy A7（2015版）', 'price': 133, 'productId': 28684, 'remoteReportNo': 'R1356189330615341056', 'repair': [{'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189331521384448', 'suggestRecyclePrice': 93}, 'resultMessage': ''}
2021-02-01 18:35:09,875 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:09,876 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:09,883 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:09,883 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 25935, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:09,883 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:09,883 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:09,883 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:09,883 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 25935}
2021-02-01 18:35:09,884 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:11,413 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:11,415 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 356, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '6G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 4569, 'type': 0}, {'checked': False, 'name': '6G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 4068, 'type': 0}, {'checked': False, 'name': '6G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4067, 'type': 0}, {'checked': False, 'name': '4G+64G', 'normal': False, 'ppnId': 806, 'ppvId': 4066, 'type': 0}, {'checked': False, 'name': '4G+32G', 'normal': False, 'ppnId': 806, 'ppvId': 3965, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '锤子 坚果 Pro2', 'price': 900, 'productId': 25935, 'remoteReportNo': 'R1356189339280773120', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189340056793088', 'suggestRecyclePrice': 750}, 'resultMessage': ''}
2021-02-01 18:35:11,416 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:11,417 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:11,425 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:11,425 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 35582, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:11,425 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:11,425 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:11,425 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:11,425 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 35582}
2021-02-01 18:35:11,426 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:13,048 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:13,049 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 485, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 492, 'ppvItems': [{'checked': True, 'name': '全网通', 'normal': False, 'ppnId': 492, 'ppvId': 3084, 'type': 0}], 'state': 0, 'title': '网络制式'}, {'ppnId': 806, 'ppvItems': [{'checked': True, 'name': '12G+512G', 'normal': False, 'ppnId': 806, 'ppvId': 9720, 'type': 0}, {'checked': False, 'name': '12G+256G', 'normal': False, 'ppnId': 806, 'ppvId': 9446, 'type': 0}, {'checked': False, 'name': '12G+128G', 'normal': False, 'ppnId': 806, 'ppvId': 9697, 'type': 0}], 'state': 0, 'title': '内存'}], 'facade': [{'ppnId': 2800, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 2800, 'ppvId': 28001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 2800, 'ppvId': 28002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 2800, 'ppvId': 28003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 2800, 'ppvId': 28004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 2800, 'ppvId': 28005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 2800, 'ppvId': 28006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 2800, 'ppvId': 28007, 'type': 1}], 'type': 1}, {'ppnId': 2900, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2900, 'ppvId': 29001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2900, 'ppvId': 29002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2900, 'ppvId': 29003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2900, 'ppvId': 29004, 'type': 1}], 'type': 1}, {'ppnId': 3000, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 3000, 'ppvId': 30001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 3000, 'ppvId': 30002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 3000, 'ppvId': 30003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 3000, 'ppvId': 30004, 'type': 1}], 'type': 1}, {'ppnId': 3100, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 3100, 'ppvId': 31001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 3100, 'ppvId': 31002, 'type': 1}], 'type': 1}, {'ppnId': 3200, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 3200, 'ppvId': 32001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 3200, 'ppvId': 32002, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}, {'checked': False, 'name': '信号弱/信号不稳定', 'normal': False, 'ppnId': 325, 'ppvId': 12541, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 592, 'ppnName': '账号', 'ppvList': [{'checked': True, 'name': '账号已注销', 'normal': True, 'ppnId': 592, 'ppvId': 3222, 'type': 0}, {'checked': False, 'name': '账号无法注销', 'normal': False, 'ppnId': 592, 'ppvId': 3223, 'type': 0}], 'type': 0}, {'ppnId': 344, 'ppnName': '指纹功能', 'ppvList': [{'checked': True, 'name': '指纹功能正常', 'normal': True, 'ppnId': 344, 'ppvId': 2102, 'type': 0}, {'checked': False, 'name': '指纹无法完全录入和解锁', 'normal': False, 'ppnId': 344, 'ppvId': 2103, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '黑鲨游戏手机 3s（5G版）', 'price': 3537, 'productId': 35582, 'remoteReportNo': 'R1356189345840680960', 'repair': [{'ppnId': 2600, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2600, 'ppvId': 26001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 2600, 'ppvId': 26002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 2600, 'ppvId': 26003, 'type': 1}], 'type': 1}, {'ppnId': 2700, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 2700, 'ppvId': 27001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 2700, 'ppvId': 27003, 'type': 1}], 'type': 1}, {'ppnId': 3300, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 3300, 'ppvId': 33001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 3300, 'ppvId': 33002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189346662817792', 'suggestRecyclePrice': 3183}, 'resultMessage': ''}
2021-02-01 18:35:13,049 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:13,049 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:13,053 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:13,053 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 36044, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:13,053 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:13,053 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:13,053 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:13,053 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 36044}
2021-02-01 18:35:13,053 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:14,587 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:14,589 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '128G', 'normal': False, 'ppnId': 315, 'ppvId': 2024, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}, {'checked': False, 'name': '白色', 'normal': False, 'ppnId': 456, 'ppvId': 2453, 'type': 0}, {'checked': False, 'name': '黑色', 'normal': False, 'ppnId': 456, 'ppvId': 2454, 'type': 0}, {'checked': False, 'name': '蓝色', 'normal': False, 'ppnId': 456, 'ppvId': 2832, 'type': 0}, {'checked': False, 'name': '红色', 'normal': False, 'ppnId': 456, 'ppvId': 2957, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1908, 'ppvItems': [{'checked': True, 'name': 'A2400', 'normal': False, 'ppnId': 1908, 'ppvId': 12646, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1908, 'ppvId': 12647, 'type': 0}, {'checked': False, 'name': 'A2398', 'normal': False, 'ppnId': 1908, 'ppvId': 12994, 'type': 0}, {'checked': False, 'name': 'A2399', 'normal': False, 'ppnId': 1908, 'ppvId': 13020, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 12 mini', 'price': 5370, 'productId': 36044, 'remoteReportNo': 'R1356189352685776896', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189353516310528', 'suggestRecyclePrice': 4940}, 'resultMessage': ''}
2021-02-01 18:35:14,589 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:14,589 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:14,595 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:14,595 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:14,595 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:14,595 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:14,595 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:14,595 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 18:35:14,595 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:16,634 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:16,637 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2218', 'normal': False, 'ppnId': 1102, 'ppvId': 11282, 'type': 0}, {'checked': False, 'name': 'A2220', 'normal': False, 'ppnId': 1102, 'ppvId': 11018, 'type': 0}, {'checked': False, 'name': 'A2161', 'normal': False, 'ppnId': 1102, 'ppvId': 11281, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro Max', 'price': 6500, 'productId': 32292, 'remoteReportNo': 'R1356189359144996864', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189361166721024', 'suggestRecyclePrice': 5980}, 'resultMessage': ''}
2021-02-01 18:35:16,637 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:16,638 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
2021-02-01 18:35:16,656 JDX INFO test_02_Manual_Inquiry.py-21 line：===================== 开始执行测试用例 ===================
2021-02-01 18:35:16,656 JDX INFO test_02_Manual_Inquiry.py-22 line：该case的值是：{'param': 32292, 'name': '人工询价', 'type': '质检入参', 'url': '/app/inspection/report/create/report/default'}
2021-02-01 18:35:16,656 JDX INFO handle_request.py-25 line：*********** 发起一次HTTP请求 *************
2021-02-01 18:35:16,656 JDX INFO handle_request.py-26 line：请求方法为：get
2021-02-01 18:35:16,656 JDX INFO handle_request.py-29 line：请求url为：https://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:16,656 JDX INFO handle_request.py-30 line：请求数据为：{'productId': 32292}
2021-02-01 18:35:16,656 JDX INFO handle_request.py-35 line：get请求url为：http://sjapi.aihuishou.com/jdx-qa-service//app/inspection/report/create/report/default
2021-02-01 18:35:18,298 JDX INFO handle_request.py-39 line：响应状态码为：200
2021-02-01 18:35:18,300 JDX INFO handle_request.py-40 line：响应数据为：{'code': 200, 'data': {'brandId': 52, 'categoryId': 1, 'deviceInfo': [{'ppnId': 314, 'ppvItems': [{'checked': True, 'name': '大陆国行', 'normal': True, 'ppnId': 314, 'ppvId': 2014, 'type': 0}, {'checked': False, 'name': '国行官换机', 'normal': False, 'ppnId': 314, 'ppvId': 2984, 'type': 0}, {'checked': False, 'name': '国行官修机', 'normal': False, 'ppnId': 314, 'ppvId': 7050, 'type': 0}, {'checked': False, 'name': '港澳台版', 'normal': False, 'ppnId': 314, 'ppvId': 2015, 'type': 0}, {'checked': False, 'name': '国行展示机', 'normal': False, 'ppnId': 314, 'ppvId': 3950, 'type': 0}, {'checked': False, 'name': '美版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11245, 'type': 0}, {'checked': False, 'name': '日版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11246, 'type': 0}, {'checked': False, 'name': '欧版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11247, 'type': 0}, {'checked': False, 'name': '韩版无锁', 'normal': False, 'ppnId': 314, 'ppvId': 11248, 'type': 0}, {'checked': False, 'name': '其他国家-无锁（含零售/官修官换/展示机）', 'normal': False, 'ppnId': 314, 'ppvId': 2794, 'type': 0}, {'checked': False, 'name': '非国行有锁', 'normal': False, 'ppnId': 314, 'ppvId': 2019, 'type': 0}], 'state': 0, 'title': '购买渠道'}, {'ppnId': 315, 'ppvItems': [{'checked': True, 'name': '512G', 'normal': False, 'ppnId': 315, 'ppvId': 7396, 'type': 0}, {'checked': False, 'name': '256G', 'normal': False, 'ppnId': 315, 'ppvId': 3987, 'type': 0}, {'checked': False, 'name': '64G', 'normal': False, 'ppnId': 315, 'ppvId': 2023, 'type': 0}], 'state': 0, 'title': '存储容量'}, {'ppnId': 333, 'ppvItems': [{'checked': True, 'name': '保修≥ 330天', 'normal': False, 'ppnId': 333, 'ppvId': 12479, 'type': 0}, {'checked': False, 'name': '保修250-330天', 'normal': False, 'ppnId': 333, 'ppvId': 12478, 'type': 0}, {'checked': False, 'name': '保修190-250天', 'normal': False, 'ppnId': 333, 'ppvId': 12477, 'type': 0}, {'checked': False, 'name': '保修110-190天', 'normal': True, 'ppnId': 333, 'ppvId': 2072, 'type': 0}, {'checked': False, 'name': '保修30-110天', 'normal': False, 'ppnId': 333, 'ppvId': 12475, 'type': 0}, {'checked': False, 'name': '保修＜30天', 'normal': False, 'ppnId': 333, 'ppvId': 2075, 'type': 0}], 'state': 0, 'title': '苹果保修期时长'}, {'ppnId': 456, 'ppvItems': [{'checked': True, 'name': '深空灰色', 'normal': False, 'ppnId': 456, 'ppvId': 9154, 'type': 0}, {'checked': False, 'name': '金色', 'normal': True, 'ppnId': 456, 'ppvId': 2452, 'type': 0}, {'checked': False, 'name': '银色', 'normal': False, 'ppnId': 456, 'ppvId': 2903, 'type': 0}, {'checked': False, 'name': '绿色', 'normal': False, 'ppnId': 456, 'ppvId': 2959, 'type': 0}], 'state': 0, 'title': '机身颜色'}, {'ppnId': 1102, 'ppvItems': [{'checked': True, 'name': 'A2218', 'normal': False, 'ppnId': 1102, 'ppvId': 11282, 'type': 0}, {'checked': False, 'name': 'A2220', 'normal': False, 'ppnId': 1102, 'ppvId': 11018, 'type': 0}, {'checked': False, 'name': 'A2161', 'normal': False, 'ppnId': 1102, 'ppvId': 11281, 'type': 0}, {'checked': False, 'name': '其他型号', 'normal': False, 'ppnId': 1102, 'ppvId': 5129, 'type': 0}], 'state': 0, 'title': '小型号'}], 'facade': [{'ppnId': 1900, 'ppnName': '屏幕显示', 'ppvList': [{'checked': True, 'name': '显示完美', 'normal': True, 'ppnId': 1900, 'ppvId': 19001, 'type': 1}, {'checked': False, 'name': '显示色差', 'normal': False, 'ppnId': 1900, 'ppvId': 19002, 'type': 1}, {'checked': False, 'name': '显示色斑', 'normal': False, 'ppnId': 1900, 'ppvId': 19003, 'type': 1}, {'checked': False, 'name': '显示透图', 'normal': False, 'ppnId': 1900, 'ppvId': 19004, 'type': 1}, {'checked': False, 'name': '显示黑色屏幕', 'normal': False, 'ppnId': 1900, 'ppvId': 19005, 'type': 1}, {'checked': False, 'name': '显示异常', 'normal': False, 'ppnId': 1900, 'ppvId': 19006, 'type': 1}, {'checked': False, 'name': '不显示/全花屏', 'normal': False, 'ppnId': 1900, 'ppvId': 19007, 'type': 1}], 'type': 1}, {'ppnId': 2000, 'ppnName': '屏幕外观', 'ppvList': [{'checked': True, 'name': '完美无划痕', 'normal': True, 'ppnId': 2000, 'ppvId': 20001, 'type': 1}, {'checked': False, 'name': '屏细微划痕', 'normal': False, 'ppnId': 2000, 'ppvId': 20002, 'type': 1}, {'checked': False, 'name': '屏幕划伤', 'normal': False, 'ppnId': 2000, 'ppvId': 20003, 'type': 1}, {'checked': False, 'name': '屏有碎裂/缺角', 'normal': False, 'ppnId': 2000, 'ppvId': 20004, 'type': 1}], 'type': 1}, {'ppnId': 2100, 'ppnName': '边框背板', 'ppvList': [{'checked': True, 'name': '外壳完美', 'normal': True, 'ppnId': 2100, 'ppvId': 21001, 'type': 1}, {'checked': False, 'name': '外壳划痕/小磕', 'normal': False, 'ppnId': 2100, 'ppvId': 21002, 'type': 1}, {'checked': False, 'name': '外壳磕碰掉漆', 'normal': False, 'ppnId': 2100, 'ppvId': 21003, 'type': 1}, {'checked': False, 'name': '外壳缺失/裂缝/刻字', 'normal': False, 'ppnId': 2100, 'ppvId': 21004, 'type': 1}], 'type': 1}, {'ppnId': 2200, 'ppnName': '受潮情况', 'ppvList': [{'checked': True, 'name': '机身无进水', 'normal': True, 'ppnId': 2200, 'ppvId': 22001, 'type': 1}, {'checked': False, 'name': '机身进水/受潮', 'normal': False, 'ppnId': 2200, 'ppvId': 22002, 'type': 1}], 'type': 1}, {'ppnId': 2300, 'ppnName': '是否弯曲', 'ppvList': [{'checked': True, 'name': '机身无弯曲', 'normal': True, 'ppnId': 2300, 'ppvId': 23001, 'type': 1}, {'checked': False, 'name': '机身弯曲', 'normal': False, 'ppnId': 2300, 'ppvId': 23002, 'type': 1}], 'type': 1}, {'ppnId': 2500, 'ppnName': '可否还原', 'ppvList': [{'checked': True, 'name': '已激活可还原', 'normal': True, 'ppnId': 2500, 'ppvId': 25001, 'type': 1}, {'checked': False, 'name': '已激活不可还原', 'normal': False, 'ppnId': 2500, 'ppvId': 25002, 'type': 1}, {'checked': False, 'name': '无法还原/无法激活', 'normal': False, 'ppnId': 2500, 'ppvId': 25003, 'type': 1}], 'type': 1}], 'functionItems': {'ppn': [{'ppnId': 316, 'ppnName': '开机情况', 'ppvList': [{'checked': True, 'name': '正常开机', 'normal': True, 'ppnId': 316, 'ppvId': 2026, 'type': 0}, {'checked': False, 'name': '有开机密码', 'normal': False, 'ppnId': 316, 'ppvId': 9630, 'type': 0}, {'checked': False, 'name': '不可进入桌面，开机时不断重启或开机时卡死', 'normal': False, 'ppnId': 316, 'ppvId': 6870, 'type': 0}, {'checked': False, 'name': '无法开机', 'normal': False, 'ppnId': 316, 'ppvId': 2027, 'type': 0}, {'checked': False, 'name': '可进入桌面，进入后间歇性自动重启', 'normal': False, 'ppnId': 316, 'ppvId': 12469, 'type': 0}], 'type': 0}, {'ppnId': 325, 'ppnName': '通话功能', 'ppvList': [{'checked': True, 'name': '通话功能正常', 'normal': True, 'ppnId': 325, 'ppvId': 2045, 'type': 0}, {'checked': False, 'name': '声音功能不正常', 'normal': False, 'ppnId': 325, 'ppvId': 6941, 'type': 0}, {'checked': False, 'name': '不读卡/不通话/无信号/无基带', 'normal': False, 'ppnId': 325, 'ppvId': 2047, 'type': 0}], 'type': 0}, {'ppnId': 345, 'ppnName': '拍摄功能', 'ppvList': [{'checked': True, 'name': '拍照摄像正常', 'normal': True, 'ppnId': 345, 'ppvId': 2104, 'type': 0}, {'checked': False, 'name': '后摄像头拍照有斑', 'normal': False, 'ppnId': 345, 'ppvId': 10201, 'type': 0}, {'checked': False, 'name': '画面异常（抖动/模糊/不对焦/颠倒/分层）', 'normal': False, 'ppnId': 345, 'ppvId': 6942, 'type': 0}, {'checked': False, 'name': '拍照无法开关/报错/全黑/闪光灯坏', 'normal': False, 'ppnId': 345, 'ppvId': 2105, 'type': 0}], 'type': 0}, {'ppnId': 346, 'ppnName': '充电功能 ', 'ppvList': [{'checked': True, 'name': '充电正常', 'normal': True, 'ppnId': 346, 'ppvId': 2106, 'type': 0}, {'checked': False, 'name': '充电无反应/充电孔接触不良', 'normal': False, 'ppnId': 346, 'ppvId': 2107, 'type': 0}], 'type': 0}, {'ppnId': 347, 'ppnName': '无线功能 ', 'ppvList': [{'checked': True, 'name': '无线正常', 'normal': True, 'ppnId': 347, 'ppvId': 2108, 'type': 0}, {'checked': False, 'name': '无线无法打开/无法连接', 'normal': False, 'ppnId': 347, 'ppvId': 2109, 'type': 0}], 'type': 0}, {'ppnId': 529, 'ppnName': '指南针功能', 'ppvList': [{'checked': True, 'name': '指南针功能正常', 'normal': True, 'ppnId': 529, 'ppvId': 2808, 'type': 0}, {'checked': False, 'name': '指南针功能不正常', 'normal': False, 'ppnId': 529, 'ppvId': 2809, 'type': 0}], 'type': 0}, {'ppnId': 580, 'ppnName': '触摸功能', 'ppvList': [{'checked': True, 'name': '触摸功能正常', 'normal': True, 'ppnId': 580, 'ppvId': 3168, 'type': 0}, {'checked': False, 'name': '触摸失灵/延迟', 'normal': False, 'ppnId': 580, 'ppvId': 3169, 'type': 0}], 'type': 0}, {'ppnId': 1135, 'ppnName': '面容识别功能', 'ppvList': [{'checked': True, 'name': '面容识别功能正常', 'normal': True, 'ppnId': 1135, 'ppvId': 5300, 'type': 0}, {'checked': False, 'name': '面容无法录入和识别', 'normal': False, 'ppnId': 1135, 'ppvId': 5299, 'type': 0}], 'type': 0}, {'ppnId': 1268, 'ppnName': '屏幕传感器功能', 'ppvList': [{'checked': True, 'name': '光线、距离感应正常', 'normal': True, 'ppnId': 1268, 'ppvId': 6947, 'type': 0}, {'checked': False, 'name': '光线/距离感应不正常', 'normal': False, 'ppnId': 1268, 'ppvId': 6948, 'type': 0}], 'type': 0}, {'ppnId': 1269, 'ppnName': '震动功能', 'ppvList': [{'checked': True, 'name': '振动正常', 'normal': True, 'ppnId': 1269, 'ppvId': 6949, 'type': 0}, {'checked': False, 'name': '振动不正常', 'normal': False, 'ppnId': 1269, 'ppvId': 6950, 'type': 0}], 'type': 0}, {'ppnId': 1359, 'ppnName': '数据连接功能', 'ppvList': [{'checked': True, 'name': '正常连接电脑', 'normal': True, 'ppnId': 1359, 'ppvId': 9507, 'type': 0}], 'type': 0}, {'ppnId': 1669, 'ppnName': '侧键', 'ppvList': [{'checked': True, 'name': '侧键正常', 'normal': True, 'ppnId': 1669, 'ppvId': 11210, 'type': 0}, {'checked': False, 'name': '侧键按压无反馈或失灵', 'normal': False, 'ppnId': 1669, 'ppvId': 11212, 'type': 0}], 'type': 0}, {'ppnId': 1899, 'ppnName': '售后案例情况', 'ppvList': [{'checked': True, 'name': '无售后维修案例', 'normal': True, 'ppnId': 1899, 'ppvId': 12604, 'type': 0}, {'checked': False, 'name': '有售后维修案例', 'normal': False, 'ppnId': 1899, 'ppvId': 12603, 'type': 0}], 'type': 0}], 'stable': []}, 'hardware': [], 'imei': [], 'mainTitle': '苹果 iPhone 11 Pro Max', 'price': 6500, 'productId': 32292, 'remoteReportNo': 'R1356189367500050432', 'repair': [{'ppnId': 1700, 'ppnName': '主板维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1700, 'ppvId': 17001, 'type': 1}, {'checked': False, 'name': '主板小修', 'normal': False, 'ppnId': 1700, 'ppvId': 17002, 'type': 1}, {'checked': False, 'name': '主板维修/扩容', 'normal': False, 'ppnId': 1700, 'ppvId': 17003, 'type': 1}], 'type': 1}, {'ppnId': 1800, 'ppnName': '屏幕维修', 'ppvList': [{'checked': True, 'name': '无维修情况', 'normal': True, 'ppnId': 1800, 'ppvId': 18001, 'type': 1}, {'checked': False, 'name': '外屏维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18002, 'type': 1}, {'checked': False, 'name': '屏幕维修', 'normal': False, 'ppnId': 1800, 'ppvId': 18003, 'type': 1}], 'type': 1}, {'ppnId': 2400, 'ppnName': '零件维修', 'ppvList': [{'checked': True, 'name': '电池/摄像头/外壳/尾插无维修', 'normal': True, 'ppnId': 2400, 'ppvId': 24001, 'type': 1}, {'checked': False, 'name': '维修过电池/摄像头/外壳/充电(耳机)口', 'normal': False, 'ppnId': 2400, 'ppvId': 24002, 'type': 1}], 'type': 1}], 'reportNo': 'R1356189368318009344', 'suggestRecyclePrice': 5980}, 'resultMessage': ''}
2021-02-01 18:35:18,301 JDX INFO handle_request.py-41 line：************* HTTP请求结束 *************
2021-02-01 18:35:18,301 JDX INFO test_02_Manual_Inquiry.py-28 line：===================== 测试用例执行结束 ===================
